(self.webpackChunksmartlink_doc=self.webpackChunksmartlink_doc||[]).push([[4583],{13123:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>De});var s=r(25316),i=r(43612),a=r(86403),n=r(49374),o=r(711),c=r(23069),l=r(54987),h=r(71899),f=r.n(h),u=r(35848),g=r.n(u),y=r(41408),p=r(76088),d=r(4150);const m=e=>y.Buffer.from(h.randomBytes?(0,h.randomBytes)(e):crypto.getRandomValues(new Uint8Array(e))),v=(e,t)=>y.Buffer.from((e=>{const t=e.replaceAll("-","").toLowerCase();return"sha256"===t?p.s.create():"sha512"===t?d.Zf.create():"sha224"===t?p.Z.create():p.s.create()})(e).update(t).digest());g().secretbox;var w=r(98408),b=r.n(w),k=r(88965),S=r(58988),K=r(66243),x=r(81840),C=r(10135),I=r(84686).Buffer;const E={},B=1,A=3,P=-1,D=-2,j=-3,N=1,O=2,M={1:S.s9,2:K.sL,3:x.Bt},T={"-257":"SHA-256","-258":"SHA-384","-259":"SHA-512","-65535":"SHA-1","-39":"SHA-512","-38":"SHA-384","-37":"SHA-256","-260":"SHA-256","-261":"SHA-512","-7":"SHA-256","-36":"SHA-512"},_=(e,t)=>v(e.replace("-",""),t),U=e=>{const t=new C.yI(e),r=t.subject,s=t.issuer,i=t.issuerName.toString(),a=r.split(","),n={};for(const l of a){const e=l.split("=");n[e[0].trim()]=e[1]}const{Version:o}=t.toTextObject().Data,c=t.getExtension(C.WA);return{issuer:s,issuerName:i,subject:n,version:o,basicConstraintsCA:!!c&&c.ca}},R=e=>{const t=e.slice(0,32),r=(e=e.slice(32)).slice(0,1);e=e.slice(1);const s=r[0],i={up:!!(1&s),uv:!!(4&s),at:!!(64&s),ed:!!(128&s),flagsInt:s},a=e.slice(0,4);e=e.slice(4);const n=a.readUInt32BE(0);let o,c,l;if(i.at){o=e.slice(0,16);const t=(e=e.slice(16)).slice(0,2);e=e.slice(2);const r=t.readUInt16BE(0);c=e.slice(0,r),l=e=e.slice(r)}return{rpIdHash:t,flagsBuf:r,flags:i,counter:n,counterBuf:a,aaguid:o,credID:c,COSEPublicKey:l}};const H=(e,t,r)=>S.s9.verify(S.s9.Signature.fromDER(r).toCompactHex(),e,t),V=(e,t,r)=>k.ev.verify(r,e,t);class L{constructor(){this.signCount=0,this.rawId=m(32),this.aaguid=I.alloc(16)}static createRequest(e){return{publicKey:{challenge:I.from(m(32).toString("base64")),rp:{name:"Vaultys ID",id:"Vaultys ID"},user:{id:"Vaultys Wallet ID",name:"Vaultys Wallet ID",displayName:"Vaultys Wallet ID"},pubKeyCredParams:[{type:"public-key",alg:e}]}}}static getCertificateInfo(e){const t=I.from(e.attestationObject),r=b().decodeAllSync(t)[0];return r.attStmt.x5c?U(r.attStmt.x5c[0]):null}static async create(e,t){let{publicKey:r}=e;void 0===t&&(t="test");const s=new L;if(s.options=r,s.rpId=r.rp.id,s.userHandle=I.from(r.user.id),E[s.rawId.toString("base64")]=s,s.alg=r.pubKeyCredParams[0].alg,-8===s.alg){const e=k.ev.utils.randomPrivateKey();s.keyPair={privateKey:e,publicKey:k.ev.getPublicKey(e)},s.coseKey=new Map,s.coseKey.set(1,1),s.coseKey.set(3,-8),s.coseKey.set(-1,6);const t=s.keyPair.publicKey.slice(0,32);s.coseKey.set(-2,t)}else if(-7===s.alg){const e=S.s9.utils.randomPrivateKey();s.keyPair={privateKey:e,publicKey:S.s9.getPublicKey(e,!1)},s.coseKey=new Map,s.coseKey.set(1,2),s.coseKey.set(3,-7),s.coseKey.set(-1,6);const t=s.keyPair.publicKey.slice(1,33),r=s.keyPair.publicKey.slice(33);s.coseKey.set(-2,t),s.coseKey.set(-3,r)}const i={type:"webauthn.create",challenge:r.challenge,origin:t},a=v("sha256",I.from(s.rpId,"ascii")),n=I.from("41","hex"),o=I.allocUnsafe(4);o.writeUInt32BE(s.signCount);const c=I.allocUnsafe(2);c.writeUInt16BE(s.rawId.length);const l=b().encode(s.coseKey),h={authData:I.concat([a,n,o,s.aaguid,c,s.rawId,l]),fmt:"none",attStmt:{}};return{id:s.rawId.toString("base64"),rawId:s.rawId,authenticatorAttachment:null,type:"public-key",getClientExtensionResults:()=>({}),response:{clientDataJSON:I.from(JSON.stringify(i),"utf-8"),attestationObject:b().encode(h),getTransports:()=>["usb","hybrid"],getAuthenticatorData:()=>h.authData,getPublicKey:()=>l,getPublicKeyAlgorithm:()=>-7}}}static simpleVerify(e,t,r){void 0===r&&(r=!1);const s=b().decode(e),i=(t.authenticatorData.slice(0,32),I.from(t.authenticatorData)[32]);t.authenticatorData.slice(33,37);if(!(r?!!(4&i):!!(1&i)))return!1;const a=v("sha256",I.from(t.clientDataJSON));let n=I.concat([I.from(t.authenticatorData),a]);if(-7==s.get(3)&&(n=v("sha256",n)),1==s.get(1)){const e=s.get(-2);return V(n,e,I.from(t.signature))}if(2==s.get(1)){const e=s.get(-2),r=s.get(-3),i=I.concat([I.from("04","hex"),e,r]);return H(n,i,I.from(t.signature))}return!1}static getCOSEPublicKey(e){const t=e.response,r=b().decode(t.attestationObject);return R(r.authData).COSEPublicKey}static verifyPackedAttestation(e,t){return void 0===t&&(t=!1),async function(e,t){void 0===t&&(t=!1);const r=I.from(e.attestationObject),s=b().decodeAllSync(r)[0];if("none"==s.fmt)return!1;const i=R(s.authData);if(!i.flags.up)return!1;if(t&&!i.flags.uv)return!1;const a=_("sha256",I.from(e.clientDataJSON)),n=I.concat([s.authData,a]),o=s.attStmt.sig;let c=!1;if(s.attStmt.x5c){const e=(e=>{let t="";for(let r=0;r<e.length;r+=64)t+=e.slice(r,r+64)+"\n";return"-----BEGIN CERTIFICATE-----\n"+t+"-----END CERTIFICATE-----"})(s.attStmt.x5c[0].toString("base64")),t=U(s.attStmt.x5c[0]),r=t.subject;if("Authenticator Attestation"!==r.OU)throw new Error('Batch certificate OU MUST be set strictly to "Authenticator Attestation"!');if(!r.CN)throw new Error("Batch certificate CN MUST no be empty!");if(!r.O)throw new Error("Batch certificate O MUST no be empty!");if(!r.C||2!==r.C.length)throw new Error("Batch certificate C MUST be set to two character ISO 3166 code!");if(t.basicConstraintsCA)throw new Error("Batch certificate basic constraints CA MUST be false!");if("v3 (2)"!==t.version)throw new Error("Batch certificate version MUST be 3(ASN1 2)!");c=f().createVerify("sha256").update(n).verify(e,o)}else{if(s.attStmt.ecdaaKeyId)throw new Error("ECDAA IS NOT SUPPORTED!");{const e=b().decodeAllSync(i.COSEPublicKey)[0],t=T[e.get(A)],r=_(t,n);if(e.get(B)===O){const t=e.get(D),s=e.get(j),i=I.concat([I.from([4]),t,s]),a=M[e.get(P)],n=a.Signature.fromDER(o);c=a.verify(n,r,i)}else{if(e.get(B)!==N)return!1;{const t=e.get(D);c=k.ev.verify(o,r,t)}}}}if(!c)throw new Error("Failed to verify the signature!");return!0}(e,t)}static verify(e,t,r){void 0===r&&(r=!1);const s=v("sha256",I.from(t.response.clientDataJSON)),i=t.response,a=e.response;let n=I.concat([I.from(i.authenticatorData),s]);const o=b().decode(a.attestationObject),c=R(o.authData);if(!c.flags.up)return!1;if(r&&!c.flags.uv||!c.COSEPublicKey)return!1;const l=b().decode(c.COSEPublicKey);if(-7==l.get(3)&&(n=v("sha256",n)),1==l.get(1)){const e=l.get(-2);return V(n,e,I.from(i.signature))}if(2==l.get(1)){const e=l.get(-2),t=l.get(-3),r=I.concat([I.from("04","hex"),e,t]);return H(n,r,I.from(i.signature))}}static extractChallenge(e){const t=JSON.parse(e.toString()),r=t.challenge.length%4;return t.challenge.replace(/-/g,"+").replace(/_/g,"/").padEnd(t.challenge.length+(0===r?0:4-r),"=")}static async get(e,t){let{publicKey:r}=e;if(void 0===t&&(t="test"),!r.allowCredentials)throw new Error;const s=I.from(r.allowCredentials[0].id).toString("base64");let i=E[s];i.signCount+=1;const a={type:"webauthn.get",challenge:I.from(r.challenge).toString("base64"),origin:t},n=v("sha256",(o=JSON.stringify(a),y.Buffer.from(o,"utf-8")));var o;const c=v("sha256",I.from(i.rpId,"utf-8")),l=I.from("05","hex"),h=I.allocUnsafe(4);h.writeUInt32BE(i.signCount);const f=I.concat([c,l,h]);let u=I.concat([f,n]),g=new Uint8Array;-7===i.alg?g=S.s9.sign(u,i.keyPair.privateKey,{prehash:!0}).toDERRawBytes():-8===i.alg&&(g=k.ev.sign(u,i.keyPair.privateKey));return{id:s,rawId:I.from(s,"base64"),type:"public-key",authenticatorAttachment:null,getClientExtensionResults:()=>({}),response:{authenticatorData:f,clientDataJSON:I.from(JSON.stringify(a),"utf-8"),signature:g,userHandle:i.userHandle}}}}var J=r(34919),$=r(817);const z=(e,t)=>{let r=e;return t.startsWith("m/")&&(t=t.slice(2)),t.split("/").forEach((e=>{r="'"==e[e.length-1]?r.derive(2147483648+parseInt(e.substring(0,e.length-1))):r.derive(parseInt(e))})),r};class F{level=1;version=1;capability="private";constructor(){this.authType="Ed25519VerificationKey2020",this.encType="X25519KeyAgreementKey2019"}static async create_Id25519_fromEntropy(e,t){void 0===t&&(t=0);const r=new F;r.entropy=e,r.level=1,r.capability="private";const s=v("sha512",e);const i=z(await $.Bip32PrivateKey.fromEntropy(s.slice(0,32)),`m/1'/0'/${t}'`);r.proofKey={publicKey:i.toBip32PublicKey().toPublicKey().toBytes(),secretKey:i.toBytes()},r.swapIndex=t,r.proof=v("sha256",r.proofKey.publicKey);const a=z(i,"/0'");r.signer={publicKey:a.toBip32PublicKey().toPublicKey().toBytes(),secretKey:a.toBytes()};const n=y.Buffer.alloc(8);n.writeBigInt64LE(BigInt(t));const o=(e=>v("sha256",e))(y.Buffer.concat([s.slice(32,64),n])),c=g().box.keyPair.fromSecretKey(o);return r.cypher={publicKey:y.Buffer.from(c.publicKey),secretKey:y.Buffer.from(c.secretKey)},r}static generate_Id25519(){return F.create_Id25519_fromEntropy(m(32))}get id(){return 0==this.version?(e=>{const t=y.Buffer.from([132,161,118,0]),r=y.Buffer.from([161,112,197,0,e.proof.length,...e.proof]),s=y.Buffer.from([161,120,197,0,e.signer.publicKey.length,...e.signer.publicKey]),i=y.Buffer.from([161,101,197,0,e.cypher.publicKey.length,...e.cypher.publicKey]);return y.Buffer.concat([t,r,s,i])})(this):y.Buffer.from((0,l.l)({v:this.version,p:this.proof,x:this.signer.publicKey,e:this.cypher.publicKey}))}getSecret(){return y.Buffer.from((0,l.l)({v:this.version,p:this.proof,x:this.signer.secretKey,e:this.cypher.secretKey}))}static fromSecret(e){const t=(0,c.D4)(e),r=new F;r.version=t.v,r.level=2,r.capability="private",r.proof=t.p,r.signer={secretKey:t.x,publicKey:new $.Bip32PrivateKey(t.x).toBip32PublicKey().toPublicKey().toBytes()};const s=g().box.keyPair.fromSecretKey(t.e);return r.cypher={publicKey:y.Buffer.from(s.publicKey),secretKey:y.Buffer.from(s.secretKey)},r}static instantiate(e){const t=new F;return t.version=e.version??0,t.level=e.level,t.proof=e.proof.data?y.Buffer.from(e.proof.data):y.Buffer.from(e.proof),t.signer={publicKey:e.signer.publicKey.data?y.Buffer.from(e.signer.publicKey.data):y.Buffer.from(e.signer.publicKey)},t.cypher={publicKey:e.cypher.publicKey.data?y.Buffer.from(e.cypher.publicKey.data):y.Buffer.from(e.cypher.publicKey)},t}static fromId(e){const t=(0,c.D4)(e),r=new F;return r.version=t.v,r.level=2,r.capability="public",r.proof=t.p,r.signer={publicKey:t.x},r.cypher={publicKey:t.e},r}async sign(e){return"public"==this.capability?null:new $.Bip32PrivateKey(this.signer.secretKey).toPrivateKey().sign(e)}verify(e,t,r){return $.Bip32PublicKey.fromBytes(this.signer.publicKey).toPublicKey().verify(t,e)}async createSwapingCertificate(){if(1===this.level){const e={newId:(await F.create_Id25519_fromEntropy(this.entropy,this.swapIndex+1)).id,proofKey:this.proofKey.publicKey,timestamp:Date.now(),signature:y.Buffer.from([])},t=y.Buffer.alloc(8);t.writeBigUInt64LE(BigInt(e.timestamp));const r=y.Buffer.concat([e.newId,e.proofKey,t]);return e.signature=new $.Bip32PrivateKey(this.proofKey.secretKey).toPrivateKey().sign(r),e}return null}async verifySwapingCertificate(e){if(v("sha256",e.proofKey).toString("hex")===this.proof.toString("hex")){const t=y.Buffer.alloc(8);t.writeBigUInt64LE(BigInt(e.timestamp));F.fromId(e.newId);const r=y.Buffer.concat([e.newId,e.proofKey,t]);return $.Bip32PublicKey.fromBytes(e.proofKey).toPublicKey().verify(r,e.signature)}return!1}async encrypt(e,t){if("private"==this.capability){const r=t.map(F.fromId).map((e=>e.cypher.publicKey));return await(0,J.MO)(e,this.cypher,r)}return null}async decrypt(e,t){if(void 0===t&&(t=null),"public"==this.capability)return null;const r=t?F.fromId(t).cypher.publicKey:null;return(await(0,J.P_)(e,this.cypher,r)).toString()}getSecretHash(e){const t=y.Buffer.concat([e,y.Buffer.from("secrethash"),this.cypher.secretKey]);return v("sha256",t)}}var W=r(84686).Buffer;const G={usb:1,nfc:2,ble:4,internal:8,hybrid:16,"smart-card":32},q=e=>{const t=W.from([131,161,118,e.version]),r=W.concat([W.from([161,99,197,0,e.ckey.length]),e.ckey]),s=W.concat([W.from([161,101,197,0,e.cypher.publicKey.length]),e.cypher.publicKey]);return W.concat([t,r,s])},X=e=>Object.keys(G).filter((t=>e&&G[t])),Z=e=>{const t=b().decode(e).get(1);return 1===t?"Ed25519VerificationKey2020":2===t?"P256VerificationKey2020":"Unknown"},Q=e=>{const t=b().decode(e);let r=W.from([]);return-7==t.get(3)?r=W.concat([W.from("04","hex"),t.get(-2),t.get(-3)]):-8==t.get(3)&&(r=t.get(-2)),{publicKey:r}};class Y extends F{_transports=0;constructor(){super(),this.level=1,this.encType="X25519KeyAgreementKey2019"}get transports(){return X(this._transports)}static async createFromAttestation(e){const t=new Y;t.ckey=L.getCOSEPublicKey(e),t.authType=Z(t.ckey),t.fid=W.from(e.id,"base64");const r=e.response,s=r.getTransports?r.getTransports():["usb"];t._transports=(e=>e.reduceRight(((e,t)=>e+(G[t]?G[t]:0)),0))(s),t.signer=Q(t.ckey);const i=m(32),a=v("sha512",i);const n=g().box.keyPair.fromSecretKey(a.slice(0,32));return t.cypher={publicKey:W.from(n.publicKey),secretKey:W.from(n.secretKey)},t.entropy=i,t}get id(){return 0==this.version?q(this):W.from((0,l.l)({v:this.version,c:this.ckey,e:this.cypher.publicKey}))}get id_v0(){return q(this)}getSecret(){return W.from((0,l.l)({v:this.version,f:this.fid,t:this._transports,c:this.ckey,e:this.cypher.secretKey}))}static fromSecret(e){const t=(0,c.D4)(e),r=new Y;r.version=t.v,r.capability="private",r.fid=t.f,r._transports=t.t?t.t:15,r.ckey=t.c,r.authType=Z(r.ckey),r.signer=Q(t.c);const s=g().box.keyPair.fromSecretKey(t.e);return r.cypher={publicKey:W.from(s.publicKey),secretKey:W.from(s.secretKey)},r}static instantiate(e){const t=new Y;return t.version=e.version??0,t.level=e.level,t.fid=e.fid,t._transports=e.t?e.t:15,t.ckey=e.ckey.data?W.from(e.ckey.data):W.from(e.ckey),t.signer=Q(t.ckey),t.authType=Z(t.ckey),t.cypher={publicKey:e.cypher.publicKey.data?W.from(e.cypher.publicKey.data):W.from(e.cypher.publicKey)},t}static fromId(e){const t=(0,c.D4)(e),r=new Y;return r.version=t.v,r.capability="public",r.fid=t.f,r.ckey=t.c,r.signer=Q(t.c),r.authType=Z(r.ckey),r.cypher={publicKey:t.e},r}async sign(e){if("public"==this.capability)return null;if(!navigator.credentials)return null;try{await(window?.CredentialUserInteractionRequest())}catch(a){}const t={challenge:v("sha256",e),userVerification:"preferred",allowCredentials:[{type:"public-key",id:this.fid,transports:X(this._transports)}]},{response:r}=await navigator.credentials.get({publicKey:t}),s=r,i={s:W.from(s.signature),c:W.from(s.clientDataJSON),a:W.from(s.authenticatorData)};return W.from((0,l.l)(i))}verify(e,t,r){const s=(0,c.D4)(t),i={signature:s.s,clientDataJSON:s.c,authenticatorData:s.a,userHandle:W.from([])};return v("sha256",e).toString("base64")==L.extractChallenge(i.clientDataJSON)&&L.simpleVerify(this.ckey,i,r)}verifyCredentials(e,t){if(void 0===t&&(t=!1),e.id!==this.fid.toString("base64"))return!1;const r=e.response;var s;return W.from(r.authenticatorData.slice(0,32)).toString("hex")===(s=W.from(e.id,"base64"),v("sha256",s)).toString("hex")&&L.simpleVerify(this.ckey,r,t)}async createRevocationCertificate(e){return null}}var ee=r(84686).Buffer;class te{constructor(e,t,r){void 0===r&&(r=0),this.type=r,this.keyManager=e,this.certificate=t}static fromId(e,t,r){void 0===r&&(r="hex");let s=e;e.data&&(s=ee.from(e.data)),e instanceof Uint8Array&&(s=ee.from(e)),"string"==typeof e&&(s=ee.from(e,r));const i=s[0];if(3==i){const e=Y.fromId(s.slice(1));return new te(e,t,i)}{const e=F.fromId(s.slice(1));return new te(e,t,i)}}static async fromEntropy(e,t){const r=e,s=await F.create_Id25519_fromEntropy(r);return new te(s,void 0,t)}static async fido2FromAttestation(e){await L.verifyPackedAttestation(e.response,!0);const t=await Y.createFromAttestation(e);return new te(t,void 0,3)}static async machineFromEntropy(e){return te.fromEntropy(e,0)}static async organizationFromEntropy(e){return te.fromEntropy(e,2)}static async personFromEntropy(e){return te.fromEntropy(e,1)}static fromSecret(e,t){void 0===t&&(t="hex");const r=ee.from(e,t),s=r[0];if(3==s){const e=Y.fromSecret(r.slice(1));return new te(e,void 0,s)}{const e=F.fromSecret(r.slice(1));return new te(e,void 0,s)}}static async generatePerson(){const e=await F.generate_Id25519();return new te(e,void 0,1)}static async generateOrganization(){const e=await F.generate_Id25519();return new te(e,void 0,2)}static async generateMachine(){const e=await F.generate_Id25519();return new te(e,void 0,0)}get relationshipCertificate(){return this.certificate}getSecret(e){return void 0===e&&(e="hex"),ee.concat([ee.from([this.type]),this.keyManager.getSecret()]).toString(e)}get fingerprint(){return(ee.from([this.type]).toString("hex")+v("SHA224",this.keyManager.id).toString("hex")).slice(0,40).toUpperCase().match(/.{1,4}/g).join(" ")}get did(){return`did:vaultys:${(ee.from([this.type]).toString("hex")+v("SHA224",this.keyManager.id).toString("hex")).slice(0,40)}`}get didDocument(){return{"@context":["https://www.w3.org/ns/did/v1","https://w3id.org/security/suites/ed25519-2020/v1"],id:this.did,authentication:[{id:`${this.did}#keys-1`,type:this.keyManager.authType,controller:this.did,publicKeyMultibase:"m"+this.keyManager.signer.publicKey.toString("base64")}],keyAgreement:[{id:`${this.did}#keys-2`,type:this.keyManager.encType,controller:this.did,publicKeyMultibase:"m"+this.keyManager.cypher.publicKey.toString("base64")}]}}get id(){return ee.concat([ee.from([this.type]),this.keyManager.id])}toVersion(e){return this.keyManager.version=e,this}get version(){return this.keyManager.version}isHardware(){return 3===this.type}isMachine(){return 0===this.type}isPerson(){return 1===this.type}getOTPHmac(e){void 0===e&&(e=36e5);const t=Math.floor((new Date).getTime()/e);return this.keyManager.getSecretHash(ee.from(`OTP-${t}`)).toString("hex")}getOTP(e,t){if(void 0===e&&(e="password"),void 0===t&&(t=864e5),this.certificate){const r=Math.floor((new Date).getTime()/t),s=ee.concat([ee.from(e,"utf-8"),ee.from(this.certificate),ee.from([r])]);return v("SHA256",s).toString("hex")}throw new Error("no certificate, cannot derive OTP")}async signChallenge(e){"string"==typeof e&&(e=ee.from(e,"hex"));const t=v("sha256",ee.concat([this.id,e]));return this.keyManager.sign(t)}verifyChallenge(e,t,r){"string"==typeof e&&(e=ee.from(e,"hex")),"string"==typeof t&&(t=ee.from(t,"hex"));const s=v("sha256",ee.concat([this.id,e]));return this.keyManager.verify(s,t,r)}async encrypt(e,t){return this.keyManager.encrypt(e,t.map((e=>"string"==typeof e?ee.from(e.slice(2),"hex"):e.slice(1))))}async decrypt(e,t){let r;return t&&(r="string"==typeof t?ee.from(t.slice(2)):t.subarray(1)),this.keyManager.decrypt(e,r)}}var re=r(84686).Buffer,se=r(65640);const ie=-2,ae=(e,t)=>re.concat([re.from([160+e.length]),re.from(e,"ascii"),re.from([160+t.length]),re.from(t,"ascii")]),ne=(e,t)=>re.concat([re.from([160+e.length]),re.from(e,"ascii"),re.from([197,t.length>>8,t.length]),t]),oe=(e,t)=>{const r=re.concat([re.from([160+e.length]),re.from(e,"ascii")]);let s;if(t>=0&&t<=127)s=re.from([t]);else if(t<0&&t>=-32)s=re.from([t]);else if(t>0&&t<=255)s=re.from([204,t]);else if(t>=-128&&t<=127)s=re.from([208,t]);else if(t>0&&t<=65535)s=re.from([205,t>>>8,t]);else if(t>=-32768&&t<=32767)s=re.from([209,t>>>8,t]);else if(t>0&&t<=4294967295)s=re.from([206,t>>>24,t>>>16,t>>>8,t]);else if(t>=-2147483648&&t<=2147483647)s=re.from([210,t>>>24,t>>>16,t>>>8,t]);else if(t>0&&t<=0x10000000000000000){let e=t/2**32,r=t%2**32;s=re.from([211,e>>>24,e>>>16,e>>>8,e,r>>>24,r>>>16,r>>>8,r])}else s=re.from([0]);return re.concat([r,s])},ce=e=>{let{protocol:t,service:r,timestamp:s,pk1:i,pk2:a,nonce:n,sign1:o,sign2:c,metadata:l}=e;return re.concat([re.from([137]),ae("protocol",t),ae("service",r),oe("timestamp",s),ne("pk1",i),ne("pk2",a),ne("nonce",n),ne("sign1",o),ne("sign2",c),re.from([168]),re.from("metadata","ascii"),re.from([128])])},le=e=>{const t={...(0,c.D4)(e),...{state:ie,error:""}};try{if(!t.pk2&&!t.sign1&&!t.sign2&&16==t.nonce?.length&&t.pk1?.length&&t.pk1.length>0)t.state=0;else if(!t.sign1&&32==t.nonce?.length&&t.pk1?.length&&t.pk2?.length&&t.sign2?.length&&t.pk1.length>0&&t.pk2.length>0&&t.sign2.length>0){const e=te.fromId(t.pk2),r=he(t,e.version);e.verifyChallenge(r,t.sign2,!0)?t.state=1:(t.state=ie,t.error="STEP1 failed to verification of pk2")}else if(t.sign1?.length&&t.sign1.length>0&&32==t.nonce?.length&&t.pk1?.length&&t.pk2?.length&&t.sign2?.length&&t.pk1.length>0&&t.pk2.length>0&&t.sign2.length>0){const e=te.fromId(t.pk1),r=te.fromId(t.pk2);if(e.version!=r.version)t.state=ie,t.error="pk1 and pk2 are using different serialization version, this is not allowed";else{const s=he(t,e.version);r.verifyChallenge(s,t.sign2,!0)?e.verifyChallenge(s,t.sign1,!0)?t.state=2:(t.state=ie,t.error="challenge failed to verification of pk1"):(t.state=ie,t.error="challenge failed to verification of pk2, looks like a tentative to tamper with an existing signature")}}}catch(r){t.state=ie,t.error=r}return t},he=function(e,t){void 0===t&&(t=0);const{protocol:r,service:s,timestamp:i,pk1:a,pk2:n,nonce:o,metadata:c}=e,h={protocol:r,service:s,timestamp:i,pk1:a,pk2:n,nonce:o,metadata:c};return 0===t?(e=>{let{protocol:t,service:r,timestamp:s,pk1:i,pk2:a,nonce:n,metadata:o}=e;return re.concat([re.from([135]),ae("protocol",t),ae("service",r),oe("timestamp",s),ne("pk1",i),ne("pk2",a),ne("nonce",n),re.from([168]),re.from("metadata","ascii"),re.from([128])])})(h):re.from((0,l.l)(h))},fe=(e,t)=>{const r=Date.now();return r-e.timestamp<t&&e.timestamp<=r+1e4};class ue{constructor(e,t){void 0===t&&(t=6e4),this.state=-1,this.vaultysId=e,this.liveliness=t}static async verifyCertificate(e){return 2==le(e).state}static deserializeCertificate=le;static serializeCertificate_v0=ce;static serializeCertificate=he;async setChallenge(e){if(-1!==this.state)throw new Error("Challenger already initialised, can't reset the state");if(this.challenge=le(e),!fe(this.challenge,this.liveliness))throw this.state=ie,this.challenge.error="challenge timestamp failed the liveliness at first signature",new Error(this.challenge.error);if(this.challenge.state==ie)throw this.state=ie,se.error(this.challenge),new Error(this.challenge.error);if(0==this.challenge.state){this.challenge.protocol,this.challenge.service;this.mykey=this.vaultysId.id,this.challenge.pk2=this.mykey,this.hisKey=this.challenge.pk1,this.challenge.nonce=re.concat([this.challenge.nonce||new Uint8Array,m(16)]);const e=this.getUnsignedChallenge();if(!e)throw new Error("Error processing Challenge");this.challenge.sign2=await this.vaultysId.signChallenge(e)||void 0,this.challenge.state=this.state=1}else{if(2!=this.challenge.state)throw new Error("Challenge is from a protocol already launched, this is completely unsafe");if(this.challenge.pk1!=this.mykey&&this.challenge.pk2!=this.mykey)throw this.state=ie,new Error("Can't link the vaultys id to this challenge");this.state=2}}getContext(){return{protocol:this.challenge?.protocol,service:this.challenge?.service,metadata:this.challenge?.metadata}}createChallenge(e,t,r,s){if(void 0===r&&(r=1),void 0===s&&(s={}),-1!=this.state)throw this.state=ie,new Error("Challenger already initialised, can't reset the state");this.mykey=this.vaultysId.toVersion(r).id,this.challenge={protocol:e,service:t,metadata:s,timestamp:Date.now(),pk1:this.mykey,nonce:m(16),state:0},this.state=0}getCertificate(){return this.challenge?re.from((e=>{if(0==e.state){const{protocol:t,service:r,timestamp:s,pk1:i,nonce:a,metadata:n}=e,o={protocol:t,service:r,timestamp:s,pk1:i,nonce:a,metadata:n},c=(0,l.l)(o);return re.from(c)}if(1==e.state){const{protocol:t,service:r,timestamp:s,pk1:i,pk2:a,nonce:n,sign2:o,metadata:c}=e,h={protocol:t,service:r,timestamp:s,pk1:i,pk2:a,nonce:n,sign2:o,metadata:c},f=(0,l.l)(h);return re.from(f)}if(2==e.state){const{protocol:t,service:r,timestamp:s,pk1:i,pk2:a,nonce:n,sign1:o,sign2:c,metadata:h}=e,f={protocol:t,service:r,timestamp:s,pk1:i,pk2:a,nonce:n,sign1:o,sign2:c,metadata:h},u=(0,l.l)(f);return re.from(u)}return null})(this.challenge)||[]):null}getUnsignedChallenge(){return he(this.challenge,this.vaultysId.version)}getContactDid(){return this.hisKey?te.fromId(this.hisKey).did:null}getContactId(){if(this.isComplete()){return te.fromId(this.hisKey,this.getCertificate()||void 0)}throw new Error("The challenge is not COMPLETE, it is unsafe to get the Contact ID before")}static fromString(e,t){const r=new ue(e);return r.setChallenge(t),r}hasFailed(){return this.state==ie}isComplete(){return 2==this.state}isSelfAuth(){return this.mykey?.toString("hex")==this.hisKey?.toString("hex")}async update(e,t){if(void 0===t&&(t={}),-1==this.state)await this.setChallenge(e);else if(0==this.state){if(this.challenge=le(e),!fe(this.challenge,this.liveliness))throw this.state=ie,this.challenge.error="challenge timestamp failed the liveliness at 2nd signature",new Error(this.challenge.error);if(1!=this.challenge.state)throw this.state=ie,new Error(`The challenge is in an expected state. Received state = '${this.challenge.state}', expected state = '1'`);{if(this.state=1,!this.mykey||!this.challenge.pk1||0!=re.compare(this.mykey,this.challenge.pk1))throw new Error(`The challenge has been tampered with. Received pk1 = '${this.challenge.pk1}', expected pk1 = '${this.mykey}'`);this.hisKey=this.challenge.pk2;const e=this.getUnsignedChallenge();if(!e)throw new Error("Error processing Challenge");this.challenge.sign1=await this.vaultysId.signChallenge(e)||void 0,this.state=this.challenge.state=2}}else{if(1!=this.state)throw this.state=ie,new Error;if(this.challenge=le(e),this.mykey=this.challenge.pk2,2!=this.challenge.state)throw this.state=ie,new Error(`The challenge is in an expected state. Received state = '${this.challenge.state}', expected state = '2'`);this.state=2}}}var ge=r(84686).Buffer;const ye=e=>e.startsWith("vaultys://login?")?"LOGIN":e.startsWith("vaultys://docsign?")?"DOCUMENT":"UNKNOWN";class pe{constructor(e,t){this.vaultysId=e,this.store=t,this.store.get("metadata")||this.store.set("metadata",{}),this.vaultysId.keyManager.entropy?this.store.set("entropy",this.vaultysId.keyManager.entropy):this.store.set("secret",this.vaultysId.getSecret()),this.store.save()}static async fromStore(e){const t=e.get("entropy"),r=e.get("secret");if(r){if(t){const s=ge.from(r,"base64")[0],i=await te.fromEntropy(t,s);return new pe(i,e)}{const t=te.fromSecret(r);return new pe(t,e)}}if(t){const r=await te.machineFromEntropy(t);return new pe(r,e)}{const t=await te.generateMachine();return new pe(t,e)}}merge(e,t){void 0===t&&(t=!0);const r=t?e:this.store,s=t?this.store:e;this.store.set("metadata",{...s.get("metadata"),...r.get("metadata")}),["signatures","wot"].forEach((t=>{let r=e.substore(t),s=this.store.substore(t);r.list().forEach((e=>{s.get(e)||s.set(e,r.get(e))}))}));let i=e.substore("contacts"),a=this.store.substore("contacts");const n=t?i:a,o=t?a:i;i.list().forEach((e=>{if(a.get(e)){const t=a.get(e);t.metadata={...o.get(e).metadata,...n.get(e).metadata},a.set(e,t)}else a.set(e,i.get(e))})),this.store.save()}isHardware(){return this.vaultysId.isHardware()}async signIn(){if(!this.vaultysId.isHardware())return!0;await window.CredentialUserInteractionRequest();const e=m(32),t=this.vaultysId.keyManager,r=await navigator.credentials.get({publicKey:{challenge:e,allowCredentials:[{type:"public-key",id:t.fid,transports:t.transports}],userVerification:"discouraged"}});if(null==r)return!1;const s=r.response,i=L.extractChallenge(ge.from(s.clientDataJSON));return e.toString("base64")===i&&t.verifyCredentials(r)}get contacts(){const e=this.store.substore("contacts");return e.list().map((t=>e.get(t))).map((e=>3===e.type?new te(Y.instantiate(e.keyManager),e.certificate,e.type):new te(F.instantiate(e.keyManager),e.certificate,e.type)))}getContact(e){const t=this.store.substore("contacts").get(e);return t?3===t.type?new te(Y.instantiate(t.keyManager),t.certificate,t.type):new te(F.instantiate(t.keyManager),t.certificate,t.type):null}setContactMetadata(e,t,r){const s=this.store.substore("contacts").get(e);s&&(s.metadata||(s.metadata={}),s.metadata[t]=r)}getContactMetadata(e,t){const r=this.store.substore("contacts").get(e);return r&&r.metadata?r.metadata[t]:null}getContactMetadatas(e){const t=this.store.substore("contacts").get(e);return t&&t.metadata?t.metadata:null}async verifyRelationshipCertificate(e){const t=this.store.substore("contacts").get(e)||this.store.substore("registrations").get(e);return ue.verifyCertificate(t.certificate)}set name(e){this.store.get("metadata").name=e}get name(){return this.store.get("metadata").name}get displayName(){const e=this.store.get("metadata");return e.firstname?e.firstname+" "+(e.name??""):e.name??"Anonymous "+this.vaultysId.fingerprint?.slice(-4)}set phone(e){this.store.get("metadata").phone=e}get phone(){return this.store.get("metadata").phone}set email(e){this.store.get("metadata").email=e}get email(){return this.store.get("metadata").email}async signChallenge(e){const t=await this.vaultysId.signChallenge(e);return this.store.substore("signatures").set(""+Date.now(),{signature:t,challenge:e}),this.store.save(),t}async signFile(e){const t=ge.from(`vaultys://docsign?hash=${e.toString("hex")}&timestamp=${Date.now()}`,"utf-8"),r={challenge:t,signature:await this.vaultysId.signChallenge(t)};return this.store.substore("signatures").set(Date.now()+"",r),this.store.save(),r}async verifyFile(e,t,r){void 0===r&&(r=!0);const s=e.toString("utf8");if(!s.startsWith("vaultys://docsign?"))return!1;const i=new URL(s);return!(2!==i.search.match(/[a-z\d]+=[a-z\d]+/gi)?.length||!i.searchParams.get("hash")||!i.searchParams.get("timestamp"))&&await this.vaultysId.verifyChallenge(e,t,r)}getSignatures(){const e=this.store.substore("signatures");return e.list().sort().map((t=>{const r=e.get(t),s=ge.from(r.challenge).toString("utf-8");return{date:t,payload:r,challenge:s,type:ye(s)}}))}migrate(e){if(e!=this.vaultysId.version){const t=this.store.substore("contacts");for(const r of t.list()){const s=this.getContact(r);if(s){const i=s?.toVersion(e);t.set(i.did,{...s,...i}),t.delete(r)}}}}async verifyChallenge(e,t){return this.vaultysId.verifyChallenge(e,t,!0)}async sync(e,t){if(void 0===t&&(t=!1),t){const r=await this.startSRP(e,"p2p","selfauth");if(r.isSelfAuth()&&r.isComplete()){const r=this.store.fromString((await e.receive()).toString("utf-8"));e.send(ge.from(this.store.toString(),"utf-8")),this.merge(r,!t)}}else{const r=await this.acceptSRP(e,"p2p","selfauth",!0);if(r.isSelfAuth()&&r.isComplete()){e.send(ge.from(this.store.toString(),"utf-8"));const r=this.store.fromString((await e.receive()).toString("utf-8"));this.merge(r,!t)}e.close()}this.store.save()}listCertificates(){const e=this.store.substore("wot");return e.list().map((t=>{const r=e.get(t);if(r.timestamp)return r;{const s={...ue.deserializeCertificate(e.get(t)),raw:r};return e.set(t,s),s}}))}async startSRP(e,t,r){const s=new ue(this.vaultysId.toVersion(0));s.createChallenge(t,r,0);const i=s.getCertificate();if(!i)throw e.close(),e.send(ge.from([0])),new Error("Error processing challenge");e.send(i);try{const t=await e.receive();await s.update(t)}catch(a){throw e.send(ge.from([0])),new Error(a)}if(s.isComplete()){const t=s.getCertificate();if(!t)throw e.close(),e.send(ge.from([0])),new Error("Error processing challenge");return e.send(t),this.store.substore("wot").set(Date.now()+"",t),s}throw e.send(ge.from([0])),new Error("Can't add a new contact if the protocol is not complete")}async acceptSRP(e,t,r,s){void 0===s&&(s=!1);const i=new ue(this.vaultysId.toVersion(0));try{let t=await e.receive();await i.update(t)}catch(o){throw e.send(ge.from([0])),new Error(o)}const a=i.getContext();if(a.protocol!=t||a.service!=r)throw e.send(ge.from([0])),new Error(`The challenge was expecting protocol '${t}' and service '${r}', received '${a.protocol}' and '${a.service}'`);const n=i.getCertificate();if(!n)throw e.close(),e.send(ge.from([0])),new Error("Error processing challenge");e.send(n);try{let t=await e.receive();await i.update(t)}catch(o){throw e.close(),new Error(o)}if(i.isComplete()){const t=i.getCertificate();return s||e.close(),this.store.substore("wot").set(Date.now()+"",t),i}throw e.close(),new Error("Can't add a new contact if the protocol is not complete")}saveContact(e){e.toVersion(this.vaultysId.version),e.isMachine()?this.store.substore("registrations").set(e.did,{site:e.did,serverId:e?.id.toString("base64"),certificate:e.certificate}):this.store.substore("contacts").set(e.did,e),this.store.save()}async askContact(e){const t=(await this.startSRP(e,"p2p","auth")).getContactId();return this.saveContact(t),t}async acceptContact(e){const t=(await this.acceptSRP(e,"p2p","auth")).getContactId();return this.saveContact(t),t}async askMyself(e){const t=await this.startSRP(e,"p2p","selfauth");return t.isSelfAuth()&&t.isComplete()}async acceptMyself(e){const t=await this.acceptSRP(e,"p2p","selfauth");return t.isSelfAuth()&&t.isComplete()}}r(84686).Buffer;var de=r(84686).Buffer;const me=(e,t)=>t?"certificate"===e?"__C__"+de.from(t).toString("base64"):"Buffer"===t.type?"_bx_"+de.from(t.data).toString("base64"):"Array"===t.constructor.name?"_bx_"+de.from(t).toString("base64"):t:t,ve=(e,t)=>t&&"certificate"===e?"string"==typeof t&&t.startsWith("__C__")?de.from(t.slice(5),"base64"):de.from(t):"string"==typeof t&&t.startsWith("_bx_")?de.from(t.slice(4),"base64"):t,we=e=>JSON.stringify(e,me),be=e=>JSON.parse(e,ve),ke=function(e){void 0===e&&(e="vaultysStorage");let t={};return localStorage[e]?t=be(localStorage[e]):localStorage[e]="{}",Se(t,(()=>localStorage.setItem(e,we(t))),(()=>localStorage.removeItem(e)))},Se=(e,t,r)=>({destroy:r,save:t,toString:()=>we(e),fromString:(e,t,r)=>Se(be(e),t,r),_raw:e,set:(t,r)=>e[t]=r,delete:t=>delete e[t],get:t=>e[t],list:()=>Object.keys(e).filter((e=>!e.startsWith("!"))),listSubstores:()=>Object.keys(e).filter((e=>e.startsWith("!"))).map((e=>e.slice(1))),deleteSubstore:t=>delete e["!"+t],substore:s=>(e["!"+s]||(e["!"+s]={}),Se(e["!"+s],t,r))});var Ke=r(31847),xe=(r(30758),r(86070)),Ce=r(65640);const Ie=[{title:(0,Ke.T)({message:"Guide VaultysID",id:"custom.features.vaultysid.title"}),Img:(0,xe.jsx)("img",{src:"img/vaultysID.png"}),description:(0,xe.jsx)(Ke.A,{id:"custom.features.vaultysid",children:"Comment t\xe9l\xe9charger sa cl\xe9 personnelle et comment l\u2019utiliser"}),link:"docs/user/install-vaultysid"},{title:(0,Ke.T)({message:"Guide Utilisateur SmartLink",id:"custom.features.user.title"}),Img:(0,xe.jsx)("img",{src:"img/SmartLinkUser.png"}),description:(0,xe.jsx)(Ke.A,{id:"custom.features.user",children:"Comment se connecter \xe0 un Espace SmartLink et comment l\u2019utiliser"}),link:"docs/user"},{title:(0,Ke.T)({message:"Guide  Administrateur SmartLink",id:"custom.features.user.admin"}),Img:(0,xe.jsx)("img",{src:"img/SmartLinkAdmin.png"}),description:(0,xe.jsx)(Ke.A,{id:"custom.features.admin",children:"Cr\xe9er et G\xe9rer un Espace SmartLink"}),link:"docs/administrateur"},{title:(0,Ke.T)({message:"Guide  D\xe9veloppeur",id:"custom.features.developer.admin"}),Img:(0,xe.jsx)("img",{src:"img/desktop-smartphone-app-development.png"}),description:(0,xe.jsx)(Ke.A,{id:"custom.features.developer",children:"Vous voulez int\xe9grez la puissance de l'authentification P2P"}),link:"docs/develop"}];function Ee(e){let{title:t,Img:r,description:s,link:i}=e;return(0,xe.jsxs)("a",{className:"flex flex-col justify-between p-4 bg-light dark:bg-dark lg:rounded-lg transition-all shadow-lg hover:scale-105 backdrop-brightness-125 hover:brightness-105",href:i,children:[(0,xe.jsx)("div",{className:"text-center m-5",children:r}),(0,xe.jsxs)("div",{className:"text-center",children:[(0,xe.jsx)(n.A,{as:"h3",className:"text-lg font-bold text-center",children:t}),(0,xe.jsx)("p",{className:"h-10 m-5",children:s})]})]})}function Be(){return(0,o.A)((()=>{(async()=>{const e=ke("doc_manager"),t=await pe.fromStore(e);e.save(),Ce.log(t.vaultysId.did)})()})),(0,xe.jsx)("section",{className:"w-full bg-dark-secondary",children:(0,xe.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 md:p-5 justify-center gap-5",children:Ie.map(((e,t)=>(0,xe.jsx)(Ee,{...e},t)))})})}var Ae=r(92259);function Pe(){const{siteConfig:e}=(0,i.A)();return(0,xe.jsx)("header",{className:"p-10 dark:bg-primary bg-secondary",children:(0,xe.jsxs)("div",{className:"flex flex-col items-center w-full",children:[(0,xe.jsx)(n.A,{as:"h1",className:"text-6xl lg:p-5 font-bold",children:e.title}),(0,xe.jsx)("p",{className:"text-2xl",children:e.tagline}),(0,xe.jsxs)("div",{className:"flex lg:flex-row flex-col items-center",children:[(0,xe.jsx)("div",{className:"lg:w-1/2",children:(0,xe.jsx)("img",{src:"https://site.vaultys.com/hs-fs/hubfs/betterGS.png"})}),(0,xe.jsxs)("ul",{className:"lg:w-1/2 lg:p-10 p-2 flex flex-col items-start text-xl gap-5",children:[(0,xe.jsxs)("li",{className:"flex flex-row items-center gap-2",children:[(0,xe.jsx)(Ae.ELp,{className:"w-6 h-6"}),(0,xe.jsx)(Ke.A,{id:"custom.home.securenow",children:"S\xe9curisez d\xe8s maintenant votre organisation"})]}),(0,xe.jsxs)("li",{className:"flex flex-row items-center gap-2",children:[(0,xe.jsx)(Ae.ELp,{className:"w-6 h-6"}),(0,xe.jsx)(Ke.A,{id:"custom.home.fillthegap",children:"Comblez les failles humaines"})]}),(0,xe.jsxs)("li",{className:"flex flex-row items-center gap-2",children:[(0,xe.jsx)(Ae.ELp,{className:"w-6 h-6"}),(0,xe.jsx)(Ke.A,{id:"custom.home.organisedata",children:"Organisez vos donn\xe9es et celles de vos collaborateurs"})]}),(0,xe.jsx)(s.A,{className:"p-5 rounded m-auto text-xl text-white dark:bg-light bg-dark-secondary shadow dark:text-primary hover:text-light",to:"docs/administrateur/start/getting-started",children:(0,xe.jsx)(Ke.A,{id:"custom.home.startfree",children:"\ud83d\udcd6 Documentation"})})]})]})]})})}function De(){const{siteConfig:e}=(0,i.A)();return(0,xe.jsxs)(a.A,{title:e.title,description:(0,Ke.T)({id:"custom.home.description",message:"SmartLink and VaultysID Documentation"}),children:[(0,xe.jsx)(Pe,{}),(0,xe.jsx)("main",{children:(0,xe.jsx)(Be,{})})]})}},34654:()=>{},34149:()=>{},89780:()=>{},99926:()=>{},90124:()=>{},71220:()=>{},38854:()=>{},92520:()=>{},37115:()=>{},60522:()=>{},70877:()=>{},87862:()=>{},77356:()=>{},22238:()=>{},71899:()=>{}}]);