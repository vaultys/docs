(self.webpackChunksmartlink_doc=self.webpackChunksmartlink_doc||[]).push([[3158],{68949:(e,t,r)=>{"use strict";r.r(t),r.d(t,{assets:()=>E,contentTitle:()=>K,default:()=>D,frontMatter:()=>C,metadata:()=>x,toc:()=>I});var s=r(86070),i=r(25710),n=r(99955),a=r(35795),o=r(30758),c=r(33275),l=r(84004),h=r(20757),u=r(29998);function f(e){let{className:t,fingerprint:r}=e;const i=(0,h.D)(r);return r.startsWith("00")?(0,s.jsx)(u.eWW,{className:t}):(0,s.jsx)(h.A,{...i,className:`${t} shrink-0`,shape:"circle",hairColorRandom:!0})}var d=r(84686).Buffer,g=r(65640);const y=e=>{let{profile:t,onEncryptionKey:i,onData:n,onSuccess:a,onFail:c,state:h}=e,u=(0,o.useRef)();const[y,p]=(0,o.useState)(),[m,v]=(0,o.useState)(!1),[w,b]=(0,o.useState)(!1),[S,k]=(0,o.useState)();let C=!1;return(0,o.useEffect)((()=>(C||(C=!0,(async()=>{const e=t.vaultysId?.toVersion(0);if(!e)return c&&c("no Id");const{PeerjsChannel:s}=r(17598);u.current=new s,i&&i(d.from(u.current.key,"hex"));const o=u.current?.start();p("https://wallet.vaultys.net#"+u.current?.getConnectionString()+"&protocol=p2p&service=auth&id="+e.id.toString("hex")),o?.then((async()=>{if(!u.current)return v(!0),c&&c("Could not open communication channel");u.current.conn?.on("data",n);try{const e=await(t?.acceptContact(u.current));return u.current?.close(),e?(b(!0),k(e.toVersion(1)),a&&a(e.toVersion(1))):(v(!0),c&&c("The handshake has failed!"))}catch(m){return v(!0),c&&c("The handshake has failed!")}}))})()),()=>{u.current?.close()})),[h]),(0,o.useEffect)((()=>{g.log(y)}),[y]),m?(0,s.jsx)("div",{children:"Error"}):S?(0,s.jsxs)("div",{className:"rounded-lg shadow-lg p-5 justify-center bg-white dark:bg-slate-900 flex-col flex gap-5 w-64 m-auto font-mono text-sm font-bold",children:[(0,s.jsx)(f,{fingerprint:S.toVersion(1).fingerprint,className:"border border-black border-solid w-24 h-24 m-auto shadow-lg"}),S.toVersion(1).fingerprint]}):y?(0,s.jsx)(l.QrCodeElement,{text:y,className:"rounded-lg shadow-xl"}):void 0};var p=r(54380),m=r(3459),v=r(49077),w=r(65640);const b=e=>{let{ekey:t,rawdata:r}=e;const[i,n]=(0,o.useState)();return(0,o.useEffect)((()=>{if(!r||!t)return;w.log(r,t);const e=(0,m.Yc)(r,t),s=(0,p.D4)(e);n((0,v.du)(s))}),[r,t]),(0,s.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-5 border border-slate-500 rounded border-solid p-5",children:[(0,s.jsxs)("div",{className:"flex flex-col gap-5",children:[(0,s.jsx)("div",{className:"text-lg font-bold text-center ",children:"Encrypted"}),(0,s.jsx)("pre",{className:"whitespace-normal",children:r?.toString("base64")})]}),(0,s.jsxs)("div",{className:"flex flex-col gap-5",children:[(0,s.jsx)("div",{className:"text-lg font-bold text-center ",children:"Decrypted"}),(0,s.jsx)("pre",{children:i})]})]})};var S=r(84686).Buffer;const k=()=>{const[e,t]=(0,o.useState)(),[r,i]=(0,o.useState)(),l=(0,o.useRef)([(0,s.jsx)("div",{children:"waiting for connexion through WebRTC..."})]),[h,u]=(0,o.useState)(!1),[f,d]=(0,o.useState)(0),[g,p]=(0,o.useState)(),[m,v]=(0,o.useState)();(0,o.useEffect)((()=>{(async()=>{const e=(0,a.DT)("doc_manager");t(await n.VL.fromStore(e))})()}));const w={start:()=>(e&&(l.current=[(0,s.jsx)("div",{children:"waiting for connexion through WebRTC..."})]),d(Math.random()),u(!0),l.current),stop:()=>{u(!1),l.current=[(0,s.jsx)("div",{children:"waiting for connexion through WebRTC..."})],d(Math.random())},me:()=>e?.vaultysId.toVersion(1).did,help:(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{children:"'me' - displays this browser page did"}),(0,s.jsx)("div",{children:"'start' - starts a WebRTC connection"}),(0,s.jsx)("div",{children:"'stop' - stops the WebRTC connection"}),(0,s.jsx)("div",{children:"'contacts' - displays this broaser page Web of Trust contact DIDs"}),(0,s.jsx)("div",{children:"'history' - your contact audit trails"})]}),contacts:()=>e?.contacts.map((e=>(0,s.jsx)("div",{children:e.toVersion(1).did}))),history:()=>e?.listCertificates().map((e=>(0,s.jsxs)("div",{children:[new Date(e.timestamp).toISOString(),": ",e.protocol,"/",e.service]})))},k=(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{children:"Welcome to the WebRTC test console to interact with the DID of your browser"}),(0,s.jsx)("div",{children:"'help' for all available commands"})]});return(0,s.jsxs)(c.XL,{children:[(0,s.jsxs)("section",{className:"p-5 flex-col md:flex-row flex gap-2 w-full",children:[(0,s.jsxs)("div",{className:"w-96 h-96 min-h-96 flex flex-col items-center justify-center",children:[h&&e&&(0,s.jsx)(y,{profile:e,onEncryptionKey:e=>{p(e)},onFail:e=>{l.current.push((0,s.jsxs)("div",{className:"text-red-500 font-bold",children:["Error: ",e]})),d(Math.random())},onData:e=>{v(S.from(e,"base64")),l.current.push((0,s.jsxs)("div",{className:"break-all",children:["Received: ",e]})),d(Math.random())},onSuccess:t=>{i(t),e?.store.save(),l.current.push((0,s.jsxs)("div",{className:"text-green-500 font-bold",children:["Connected to ",t.did," "]})),d(Math.random())}}),!h&&(0,s.jsxs)("div",{className:"w-full h-full flex flex-col items-center justify-center p-5 bg-opacity-15 bg-black dark:bg-opacity-15 dark:bg-white rounded-lg",children:[" ","Write 'start' in command prompt and get ready with your wallet VaultysID"]})]}),(0,s.jsx)("div",{className:"flex-1 overflow-auto max-h-96",children:(0,s.jsx)(c.e,{theme:"dark",enableInput:!0,showControlBar:!1,commands:w,welcomeMessage:k})},f)]}),(0,s.jsx)(b,{ekey:g,rawdata:m})]})},C={hide_table_of_contents:!0},K="WebRTC",x={id:"develop/try/webrtc",title:"WebRTC",description:"",source:"@site/docs/develop/try/webrtc.mdx",sourceDirName:"develop/try",slug:"/develop/try/webrtc",permalink:"/docs/develop/try/webrtc",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"userguideSidebar",previous:{title:"Simulator",permalink:"/docs/develop/try/simulation"}},E={},I=[];function B(e){const t={h1:"h1",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"webrtc",children:"WebRTC"}),"\n",(0,s.jsx)(k,{})]})}function D(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(B,{...e})}):B(e)}},17598:(e,t,r)=>{"use strict";r.r(t),r.d(t,{PeerjsChannel:()=>l});var s=r(325),i=r(77850),n=r(84686).Buffer,a=r(65640);const{hash:o,randomBytes:c}=i.Et;class l{constructor(e,t,r){void 0===r&&(r="peerjs.92k.de"),this.host=r,this.status=t||(e?"receiver":"initiator"),this.otherstatus="initiator"==this.status?"receiver":"initiator",this.key=e??c(32).toString("hex"),this.id=o("sha256",n.from(`vaultys-${this.status}-${this.key}`)).toString("hex"),this.otherid=i.Et.hash("sha256",n.from(`vaultys-${this.otherstatus}-${this.key}`)).toString("hex");const l={debug:2,host:this.host,secure:!0,logFunction:function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),s=1;s<t;s++)r[s-1]=arguments[s];return a.log(e.toString(),r)}};if(this.peer=new s.xM(this.id,l),"initiator"==this.status){const e=this;e.peer.on("connection",(t=>{a.log("PeerJs connection incoming..."),e.conn=t,e.conn.on("data",(t=>{a.log("receiving: ",t),e._onData(n.from(t,"base64"))})),e.conn.on("close",(()=>e.peer.destroy())),e._onStarted()}))}i.jC.encryptChannel(this,n.from(this.key,"hex"))}static fromConnectionString(e){if(e.startsWith("vaultys://peerjs?")){const t=new URL(e),r=t.searchParams.get("key"),s=t.searchParams.get("host");return r&&s?new l(r,"receiver",s):null}return null}fromConnectionString(e){return l.fromConnectionString(e)}getConnectionString(){return`vaultys://peerjs?key=${this.key}&host=${this.host}`}async start(){const e=this;return"receiver"===this.status&&(this.conn=this.peer.connect(this.otherid),e.conn.on("open",(t=>{a.log("opening PeerJS Channel..."),e.conn.on("data",(t=>{a.log("receiving: ",t),e._onData(n.from(t,"base64"))})),e.conn.on("close",(()=>e.peer.destroy())),e._onStarted()}))),new Promise((t=>e._onStarted=t))}send(e){a.log("sending: ",e.toString("base64")),this.conn.send(e.toString("base64"))}async receive(){const e=this;return new Promise((t=>e._onData=t))}close(){return this.conn&&this.conn.close(),this.peer.destroy(),Promise.resolve()}}},49077:(e,t,r)=>{"use strict";r.d(t,{cb:()=>a,du:()=>l,vX:()=>c});var s=r(99955),i=r(75530),n=r(84686).Buffer;const a=e=>new Promise((t=>setTimeout(t,e))),o=e=>{const t=/^((?!chrome|android).)*applewebkit/i.test(navigator.userAgent);return{challenge:(0,i.po)(32),rp:{name:"Vaultys ID"},user:{id:(0,i.po)(16),name:"Vaultys ID",displayName:"Vaultys Wallet ID"},attestation:t?"none":"direct",authenticatorSelection:{authenticatorAttachment:e?"platform":"cross-platform",residentKey:e?"required":"discouraged",userVerification:"preferred"},pubKeyCredParams:[{type:"public-key",alg:-7},{type:"public-key",alg:-8},{type:"public-key",alg:-257}]}},c=async e=>{const t=await navigator.credentials.create({publicKey:o(e)});return t?await s.YC.fido2FromAttestation(t):null},l=e=>JSON.stringify(e,((e,t)=>t?.data&&"Buffer"==t?.type?n.from(t.data).toString("base64"):t),2)},99955:(e,t,r)=>{"use strict";r.d(t,{VL:()=>ce,XG:()=>le.XG,YC:()=>q});var s=r(23069),i=r(54987),n=r(75530),a=r(98408),o=r.n(a),c=r(35848),l=r.n(c),h=r(71899),u=r.n(h),f=r(88965),d=r(58988),g=r(66243),y=r(81840),p=r(10135),m=r(84686).Buffer;const v={},w=1,b=3,S=-1,k=-2,C=-3,K=1,x=2,E={1:d.s9,2:g.sL,3:y.Bt},I={"-257":"SHA-256","-258":"SHA-384","-259":"SHA-512","-65535":"SHA-1","-39":"SHA-512","-38":"SHA-384","-37":"SHA-256","-260":"SHA-256","-261":"SHA-512","-7":"SHA-256","-36":"SHA-512"},B=(e,t)=>(0,n.tW)(e.replace("-",""),t),D=e=>{const t=new p.yI(e),r=t.subject,s=t.issuer,i=t.issuerName.toString(),n=r.split(","),a={};for(const l of n){const e=l.split("=");a[e[0].trim()]=e[1]}const{Version:o}=t.toTextObject().Data,c=t.getExtension(p.WA);return{issuer:s,issuerName:i,subject:a,version:o,basicConstraintsCA:!!c&&c.ca}},P=e=>{const t=e.slice(0,32),r=(e=e.slice(32)).slice(0,1);e=e.slice(1);const s=r[0],i={up:!!(1&s),uv:!!(4&s),at:!!(64&s),ed:!!(128&s),flagsInt:s},n=e.slice(0,4);e=e.slice(4);const a=n.readUInt32BE(0);let o,c,l;if(i.at){o=e.slice(0,16);const t=(e=e.slice(16)).slice(0,2);e=e.slice(2);const r=t.readUInt16BE(0);c=e.slice(0,r),l=e=e.slice(r)}return{rpIdHash:t,flagsBuf:r,flags:i,counter:a,counterBuf:n,aaguid:o,credID:c,COSEPublicKey:l}};const j=(e,t,r)=>d.s9.verify(d.s9.Signature.fromDER(r).toCompactHex(),e,t),A=(e,t,r)=>f.ev.verify(r,e,t);class T{constructor(){this.signCount=0,this.rawId=(0,n.po)(32),this.aaguid=m.alloc(16)}static createRequest(e){return{publicKey:{challenge:m.from((0,n.po)(32).toString("base64")),rp:{name:"Vaultys ID",id:"Vaultys ID"},user:{id:m.from("Vaultys Wallet ID","utf8"),name:"Vaultys Wallet ID",displayName:"Vaultys Wallet ID"},pubKeyCredParams:[{type:"public-key",alg:e}]}}}static getCertificateInfo(e){const t=m.from(e.attestationObject),r=o().decodeAllSync(t)[0];return r.attStmt.x5c?D(r.attStmt.x5c[0]):null}static async create(e,t){let{publicKey:r}=e;void 0===t&&(t="test");const s=new T;if(s.options=r,s.rpId=r.rp.id,s.userHandle=m.from(r.user.id),v[s.rawId.toString("base64")]=s,s.alg=r.pubKeyCredParams[0].alg,-8===s.alg){const e=f.ev.utils.randomPrivateKey();s.keyPair={privateKey:e,publicKey:f.ev.getPublicKey(e)},s.coseKey=new Map,s.coseKey.set(1,1),s.coseKey.set(3,-8),s.coseKey.set(-1,6);const t=s.keyPair.publicKey.slice(0,32);s.coseKey.set(-2,t)}else if(-7===s.alg){const e=d.s9.utils.randomPrivateKey();s.keyPair={privateKey:e,publicKey:d.s9.getPublicKey(e,!1)},s.coseKey=new Map,s.coseKey.set(1,2),s.coseKey.set(3,-7),s.coseKey.set(-1,6);const t=s.keyPair.publicKey.slice(1,33),r=s.keyPair.publicKey.slice(33);s.coseKey.set(-2,t),s.coseKey.set(-3,r)}const i={type:"webauthn.create",challenge:r.challenge,origin:t},a=(0,n.tW)("sha256",m.from(s.rpId,"ascii")),c=m.from("41","hex"),l=m.allocUnsafe(4);l.writeUInt32BE(s.signCount);const h=m.allocUnsafe(2);h.writeUInt16BE(s.rawId.length);const u=o().encode(s.coseKey),g={authData:m.concat([a,c,l,s.aaguid,h,s.rawId,u]),fmt:"none",attStmt:{}};return{id:s.rawId.toString("base64"),rawId:s.rawId,authenticatorAttachment:null,type:"public-key",getClientExtensionResults:()=>({}),response:{clientDataJSON:m.from(JSON.stringify(i),"utf-8"),attestationObject:o().encode(g),getTransports:()=>["usb","hybrid"],getAuthenticatorData:()=>g.authData,getPublicKey:()=>u,getPublicKeyAlgorithm:()=>-7}}}static simpleVerify(e,t,r){void 0===r&&(r=!1);const s=o().decode(e),i=(t.authenticatorData.slice(0,32),m.from(t.authenticatorData)[32]);t.authenticatorData.slice(33,37);if(!(r?!!(4&i):!!(1&i)))return!1;const a=(0,n.tW)("sha256",m.from(t.clientDataJSON));let c=m.concat([m.from(t.authenticatorData),a]);if(-7==s.get(3)&&(c=(0,n.tW)("sha256",c)),1==s.get(1)){const e=s.get(-2);return A(c,e,m.from(t.signature))}if(2==s.get(1)){const e=s.get(-2),r=s.get(-3),i=m.concat([m.from("04","hex"),e,r]);return j(c,i,m.from(t.signature))}return!1}static getCOSEPublicKey(e){const t=e.response,r=o().decode(t.attestationObject);return P(r.authData).COSEPublicKey}static verifyPackedAttestation(e,t){return void 0===t&&(t=!1),async function(e,t){void 0===t&&(t=!1);const r=m.from(e.attestationObject),s=o().decodeAllSync(r)[0];if("none"==s.fmt)return!1;const i=P(s.authData);if(!i.flags.up)return!1;if(t&&!i.flags.uv)return!1;const n=B("sha256",m.from(e.clientDataJSON)),a=m.concat([s.authData,n]),c=s.attStmt.sig;let l=!1;if(s.attStmt.x5c){const e=(e=>{let t="";for(let r=0;r<e.length;r+=64)t+=e.slice(r,r+64)+"\n";return"-----BEGIN CERTIFICATE-----\n"+t+"-----END CERTIFICATE-----"})(s.attStmt.x5c[0].toString("base64")),t=D(s.attStmt.x5c[0]),r=t.subject;if("Authenticator Attestation"!==r.OU)throw new Error('Batch certificate OU MUST be set strictly to "Authenticator Attestation"!');if(!r.CN)throw new Error("Batch certificate CN MUST no be empty!");if(!r.O)throw new Error("Batch certificate O MUST no be empty!");if(!r.C||2!==r.C.length)throw new Error("Batch certificate C MUST be set to two character ISO 3166 code!");if(t.basicConstraintsCA)throw new Error("Batch certificate basic constraints CA MUST be false!");if("v3 (2)"!==t.version)throw new Error("Batch certificate version MUST be 3(ASN1 2)!");l=u().createVerify("sha256").update(a).verify(e,c)}else{if(s.attStmt.ecdaaKeyId)throw new Error("ECDAA IS NOT SUPPORTED!");{const e=o().decodeAllSync(i.COSEPublicKey)[0],t=I[e.get(b)],r=B(t,a);if(e.get(w)===x){const t=e.get(k),s=e.get(C),i=m.concat([m.from([4]),t,s]),n=E[e.get(S)],a=n.Signature.fromDER(c);l=n.verify(a,r,i)}else{if(e.get(w)!==K)return!1;{const t=e.get(k);l=f.ev.verify(c,r,t)}}}}if(!l)throw new Error("Failed to verify the signature!");return!0}(e,t)}static verify(e,t,r){void 0===r&&(r=!1);const s=(0,n.tW)("sha256",m.from(t.response.clientDataJSON)),i=t.response,a=e.response;let c=m.concat([m.from(i.authenticatorData),s]);const l=o().decode(a.attestationObject),h=P(l.authData);if(!h.flags.up)return!1;if(r&&!h.flags.uv||!h.COSEPublicKey)return!1;const u=o().decode(h.COSEPublicKey);if(-7==u.get(3)&&(c=(0,n.tW)("sha256",c)),1==u.get(1)){const e=u.get(-2);return A(c,e,m.from(i.signature))}if(2==u.get(1)){const e=u.get(-2),t=u.get(-3),r=m.concat([m.from("04","hex"),e,t]);return j(c,r,m.from(i.signature))}}static extractChallenge(e){const t=JSON.parse(e.toString()),r=t.challenge.length%4;return t.challenge.replace(/-/g,"+").replace(/_/g,"/").padEnd(t.challenge.length+(0===r?0:4-r),"=")}static async get(e,t){let{publicKey:r}=e;if(void 0===t&&(t="test"),!r.allowCredentials)throw new Error;const s=m.from(r.allowCredentials[0].id).toString("base64");let i=v[s];i.signCount+=1;const a={type:"webauthn.get",challenge:m.from(r.challenge).toString("base64"),origin:t},o=(0,n.tW)("sha256",(0,n.E0)(JSON.stringify(a))),c=(0,n.tW)("sha256",m.from(i.rpId,"utf-8")),l=m.from("05","hex"),h=m.allocUnsafe(4);h.writeUInt32BE(i.signCount);const u=m.concat([c,l,h]);let g=m.concat([u,o]),y=new Uint8Array;-7===i.alg?y=d.s9.sign(g,i.keyPair.privateKey,{prehash:!0}).toDERRawBytes():-8===i.alg&&(y=f.ev.sign(g,i.keyPair.privateKey));return{id:s,rawId:m.from(s,"base64"),type:"public-key",authenticatorAttachment:null,getClientExtensionResults:()=>({}),response:{authenticatorData:u,clientDataJSON:m.from(JSON.stringify(a),"utf-8"),signature:y,userHandle:i.userHandle}}}}var M=r(34919),N=r(41408),W=r(19048);const _=r.n(W)()??W,O=(e,t)=>{let r=e;return t.startsWith("m/")&&(t=t.slice(2)),t.split("/").forEach((e=>{r="'"==e[e.length-1]?r.derive(2147483648+parseInt(e.substring(0,e.length-1))):r.derive(parseInt(e))})),r};class R{level=1;version=1;capability="private";constructor(){this.authType="Ed25519VerificationKey2020",this.encType="X25519KeyAgreementKey2019"}static async create_Id25519_fromEntropy(e,t){void 0===t&&(t=0);const r=new R;r.entropy=e,r.level=1,r.capability="private";const s=(i=e,(0,n.tW)("sha512",i));var i;const a=O(await _.Bip32PrivateKey.fromEntropy(s.slice(0,32)),`m/1'/0'/${t}'`);r.proofKey={publicKey:a.toBip32PublicKey().toPublicKey().toBytes(),secretKey:a.toBytes()},r.swapIndex=t,r.proof=(0,n.tW)("sha256",r.proofKey.publicKey);const o=O(a,"/0'");r.signer={publicKey:o.toBip32PublicKey().toPublicKey().toBytes(),secretKey:o.toBytes()};const c=N.Buffer.alloc(8);c.writeBigInt64LE(BigInt(t));const h=(e=>(0,n.tW)("sha256",e))(N.Buffer.concat([s.slice(32,64),c])),u=l().box.keyPair.fromSecretKey(h);return r.cypher={publicKey:N.Buffer.from(u.publicKey),secretKey:N.Buffer.from(u.secretKey)},r}static generate_Id25519(){return R.create_Id25519_fromEntropy((0,n.po)(32))}get id(){return 0==this.version?(e=>{const t=N.Buffer.from([132,161,118,0]),r=N.Buffer.from([161,112,197,0,e.proof.length,...e.proof]),s=N.Buffer.from([161,120,197,0,e.signer.publicKey.length,...e.signer.publicKey]),i=N.Buffer.from([161,101,197,0,e.cypher.publicKey.length,...e.cypher.publicKey]);return N.Buffer.concat([t,r,s,i])})(this):N.Buffer.from((0,i.l)({v:this.version,p:this.proof,x:this.signer.publicKey,e:this.cypher.publicKey}))}getSecret(){return N.Buffer.from((0,i.l)({v:this.version,p:this.proof,x:this.signer.secretKey,e:this.cypher.secretKey}))}static fromSecret(e){const t=(0,s.D4)(e),r=new R;r.version=t.v,r.level=2,r.capability="private",r.proof=t.p,r.signer={secretKey:t.x,publicKey:new _.Bip32PrivateKey(t.x).toBip32PublicKey().toPublicKey().toBytes()};const i=l().box.keyPair.fromSecretKey(t.e);return r.cypher={publicKey:N.Buffer.from(i.publicKey),secretKey:N.Buffer.from(i.secretKey)},r}static instantiate(e){const t=new R;return t.version=e.version??0,t.level=e.level,t.proof=e.proof.data?N.Buffer.from(e.proof.data):N.Buffer.from(e.proof),t.signer={publicKey:e.signer.publicKey.data?N.Buffer.from(e.signer.publicKey.data):N.Buffer.from(e.signer.publicKey)},t.cypher={publicKey:e.cypher.publicKey.data?N.Buffer.from(e.cypher.publicKey.data):N.Buffer.from(e.cypher.publicKey)},t}static fromId(e){const t=(0,s.D4)(e),r=new R;return r.version=t.v,r.level=2,r.capability="public",r.proof=t.p,r.signer={publicKey:t.x},r.cypher={publicKey:t.e},r}async sign(e){return"public"==this.capability?null:new _.Bip32PrivateKey(this.signer.secretKey).toPrivateKey().sign(e)}verify(e,t,r){return _.Bip32PublicKey.fromBytes(this.signer.publicKey).toPublicKey().verify(t,e)}async createSwapingCertificate(){if(1===this.level){const e={newId:(await R.create_Id25519_fromEntropy(this.entropy,this.swapIndex+1)).id,proofKey:this.proofKey.publicKey,timestamp:Date.now(),signature:N.Buffer.from([])},t=N.Buffer.alloc(8);t.writeBigUInt64LE(BigInt(e.timestamp));const r=N.Buffer.concat([e.newId,e.proofKey,t]);return e.signature=new _.Bip32PrivateKey(this.proofKey.secretKey).toPrivateKey().sign(r),e}return null}async verifySwapingCertificate(e){if((0,n.tW)("sha256",e.proofKey).toString("hex")===this.proof.toString("hex")){const t=N.Buffer.alloc(8);t.writeBigUInt64LE(BigInt(e.timestamp));R.fromId(e.newId);const r=N.Buffer.concat([e.newId,e.proofKey,t]);return _.Bip32PublicKey.fromBytes(e.proofKey).toPublicKey().verify(r,e.signature)}return!1}async encrypt(e,t){if("private"==this.capability){const r=t.map(R.fromId).map((e=>e.cypher.publicKey));return await(0,M.MO)(e,this.cypher,r)}return null}async decrypt(e,t){if(void 0===t&&(t=null),"public"==this.capability)return null;const r=t?R.fromId(t).cypher.publicKey:null;return(await(0,M.P_)(e,this.cypher,r)).toString()}getSecretHash(e){const t=N.Buffer.concat([e,N.Buffer.from("secrethash"),this.cypher.secretKey]);return(0,n.tW)("sha256",t)}}var V=r(84686).Buffer;const U={usb:1,nfc:2,ble:4,internal:8,hybrid:16,"smart-card":32},H=e=>{const t=V.from([131,161,118,e.version]),r=V.concat([V.from([161,99,197,0,e.ckey.length]),e.ckey]),s=V.concat([V.from([161,101,197,0,e.cypher.publicKey.length]),e.cypher.publicKey]);return V.concat([t,r,s])},$=e=>Object.keys(U).filter((t=>e&&U[t])),F=e=>{const t=o().decode(e).get(1);return 1===t?"Ed25519VerificationKey2020":2===t?"P256VerificationKey2020":"Unknown"},J=e=>{const t=o().decode(e);let r=V.from([]);return-7==t.get(3)?r=V.concat([V.from("04","hex"),t.get(-2),t.get(-3)]):-8==t.get(3)&&(r=t.get(-2)),{publicKey:r}};class L extends R{_transports=0;constructor(){super(),this.level=1,this.encType="X25519KeyAgreementKey2019"}get transports(){return $(this._transports)}static async createFromAttestation(e){const t=new L;t.ckey=T.getCOSEPublicKey(e),t.authType=F(t.ckey),t.fid=V.from(e.id,"base64");const r=e.response,s=r.getTransports?r.getTransports():["usb"];t._transports=(e=>e.reduceRight(((e,t)=>e+(U[t]?U[t]:0)),0))(s),t.signer=J(t.ckey);const i=(0,n.po)(32),a=(o=i,(0,n.tW)("sha512",o));var o;const c=l().box.keyPair.fromSecretKey(a.slice(0,32));return t.cypher={publicKey:V.from(c.publicKey),secretKey:V.from(c.secretKey)},t.entropy=i,t}get id(){return 0==this.version?H(this):V.from((0,i.l)({v:this.version,c:this.ckey,e:this.cypher.publicKey}))}get id_v0(){return H(this)}getSecret(){return V.from((0,i.l)({v:this.version,f:this.fid,t:this._transports,c:this.ckey,e:this.cypher.secretKey}))}static fromSecret(e){const t=(0,s.D4)(e),r=new L;r.version=t.v,r.capability="private",r.fid=t.f,r._transports=t.t?t.t:15,r.ckey=t.c,r.authType=F(r.ckey),r.signer=J(t.c);const i=l().box.keyPair.fromSecretKey(t.e);return r.cypher={publicKey:V.from(i.publicKey),secretKey:V.from(i.secretKey)},r}static instantiate(e){const t=new L;return t.version=e.version??0,t.level=e.level,t.fid=e.fid,t._transports=e.t?e.t:15,t.ckey=e.ckey.data?V.from(e.ckey.data):V.from(e.ckey),t.signer=J(t.ckey),t.authType=F(t.ckey),t.cypher={publicKey:e.cypher.publicKey.data?V.from(e.cypher.publicKey.data):V.from(e.cypher.publicKey)},t}static fromId(e){const t=(0,s.D4)(e),r=new L;return r.version=t.v,r.capability="public",r.fid=t.f,r.ckey=t.c,r.signer=J(t.c),r.authType=F(r.ckey),r.cypher={publicKey:t.e},r}async sign(e){if("public"==this.capability)return null;if(!navigator.credentials)return null;try{await(window?.CredentialUserInteractionRequest())}catch(o){}const t={challenge:(0,n.tW)("sha256",e),userVerification:"preferred",allowCredentials:[{type:"public-key",id:this.fid,transports:$(this._transports)}]},{response:r}=await navigator.credentials.get({publicKey:t}),s=r,a={s:V.from(s.signature),c:V.from(s.clientDataJSON),a:V.from(s.authenticatorData)};return V.from((0,i.l)(a))}verify(e,t,r){void 0===r&&(r=!1);const i=(0,s.D4)(t),a={signature:i.s,clientDataJSON:i.c,authenticatorData:i.a,userHandle:V.from([])};return(0,n.tW)("sha256",e).toString("base64")==T.extractChallenge(a.clientDataJSON)&&T.simpleVerify(this.ckey,a,r)}verifyCredentials(e,t){if(void 0===t&&(t=!1),e.id!==this.fid.toString("base64"))return!1;const r=e.response;var s;return V.from(r.authenticatorData.slice(0,32)).toString("hex")===(s=V.from(e.id,"base64"),(0,n.tW)("sha256",s)).toString("hex")&&T.simpleVerify(this.ckey,r,t)}async createRevocationCertificate(e){return null}}var Y=r(84686).Buffer;class q{constructor(e,t,r){void 0===r&&(r=0),this.type=r,this.keyManager=e,this.certificate=t}static fromId(e,t,r){void 0===r&&(r="hex");let s=e;e.data&&(s=Y.from(e.data)),e instanceof Uint8Array&&(s=Y.from(e)),"string"==typeof e&&(s=Y.from(e,r));const i=s[0];if(3==i){const e=L.fromId(s.slice(1));return new q(e,t,i)}{const e=R.fromId(s.slice(1));return new q(e,t,i)}}static async fromEntropy(e,t){const r=e,s=await R.create_Id25519_fromEntropy(r);return new q(s,void 0,t)}static async fido2FromAttestation(e){await T.verifyPackedAttestation(e.response,!0);const t=await L.createFromAttestation(e);return new q(t,void 0,3)}static async machineFromEntropy(e){return q.fromEntropy(e,0)}static async organizationFromEntropy(e){return q.fromEntropy(e,2)}static async personFromEntropy(e){return q.fromEntropy(e,1)}static fromSecret(e,t){void 0===t&&(t="hex");const r=Y.from(e,t),s=r[0];if(3==s){const e=L.fromSecret(r.slice(1));return new q(e,void 0,s)}{const e=R.fromSecret(r.slice(1));return new q(e,void 0,s)}}static async generatePerson(){const e=await R.generate_Id25519();return new q(e,void 0,1)}static async generateOrganization(){const e=await R.generate_Id25519();return new q(e,void 0,2)}static async generateMachine(){const e=await R.generate_Id25519();return new q(e,void 0,0)}get relationshipCertificate(){return this.certificate}getSecret(e){return void 0===e&&(e="hex"),Y.concat([Y.from([this.type]),this.keyManager.getSecret()]).toString(e)}get fingerprint(){return(Y.from([this.type]).toString("hex")+(0,n.tW)("SHA224",this.keyManager.id).toString("hex")).slice(0,40).toUpperCase().match(/.{1,4}/g).join(" ")}get did(){return`did:vaultys:${(Y.from([this.type]).toString("hex")+(0,n.tW)("SHA224",this.keyManager.id).toString("hex")).slice(0,40)}`}get didDocument(){return{"@context":["https://www.w3.org/ns/did/v1","https://w3id.org/security/suites/ed25519-2020/v1"],id:this.did,authentication:[{id:`${this.did}#keys-1`,type:this.keyManager.authType,controller:this.did,publicKeyMultibase:"m"+this.keyManager.signer.publicKey.toString("base64")}],keyAgreement:[{id:`${this.did}#keys-2`,type:this.keyManager.encType,controller:this.did,publicKeyMultibase:"m"+this.keyManager.cypher.publicKey.toString("base64")}]}}get id(){return Y.concat([Y.from([this.type]),this.keyManager.id])}toVersion(e){return this.keyManager.version=e,this}get version(){return this.keyManager.version}isHardware(){return 3===this.type}isMachine(){return 0===this.type}isPerson(){return 1===this.type}getOTPHmac(e){void 0===e&&(e=36e5);const t=Math.floor((new Date).getTime()/e);return this.keyManager.getSecretHash(Y.from(`OTP-${t}`)).toString("hex")}getOTP(e,t){if(void 0===e&&(e="password"),void 0===t&&(t=864e5),this.certificate){const r=Math.floor((new Date).getTime()/t),s=Y.concat([Y.from(e,"utf-8"),Y.from(this.certificate),Y.from([r])]);return(0,n.tW)("SHA256",s).toString("hex")}throw new Error("no certificate, cannot derive OTP")}async signChallenge(e){"string"==typeof e&&(e=Y.from(e,"hex"));const t=(0,n.tW)("sha256",Y.concat([this.id,e]));return this.keyManager.sign(t)}verifyChallenge(e,t,r){"string"==typeof e&&(e=Y.from(e,"hex")),"string"==typeof t&&(t=Y.from(t,"hex"));const s=(0,n.tW)("sha256",Y.concat([this.id,e]));return this.keyManager.verify(s,t,r)}async encrypt(e,t){return this.keyManager.encrypt(e,t.map((e=>"string"==typeof e?Y.from(e.slice(2),"hex"):e.slice(1))))}async decrypt(e,t){let r;return t&&(r="string"==typeof t?Y.from(t.slice(2)):t.subarray(1)),this.keyManager.decrypt(e,r)}}var z=r(84686).Buffer,X=r(65640);const G=-2,Z=(e,t)=>z.concat([z.from([160+e.length]),z.from(e,"ascii"),z.from([160+t.length]),z.from(t,"ascii")]),Q=(e,t)=>z.concat([z.from([160+e.length]),z.from(e,"ascii"),z.from([197,t.length>>8,t.length]),t]),ee=(e,t)=>{const r=z.concat([z.from([160+e.length]),z.from(e,"ascii")]);let s;if(t>=0&&t<=127)s=z.from([t]);else if(t<0&&t>=-32)s=z.from([t]);else if(t>0&&t<=255)s=z.from([204,t]);else if(t>=-128&&t<=127)s=z.from([208,t]);else if(t>0&&t<=65535)s=z.from([205,t>>>8,t]);else if(t>=-32768&&t<=32767)s=z.from([209,t>>>8,t]);else if(t>0&&t<=4294967295)s=z.from([206,t>>>24,t>>>16,t>>>8,t]);else if(t>=-2147483648&&t<=2147483647)s=z.from([210,t>>>24,t>>>16,t>>>8,t]);else if(t>0&&t<=0x10000000000000000){let e=t/2**32,r=t%2**32;s=z.from([211,e>>>24,e>>>16,e>>>8,e,r>>>24,r>>>16,r>>>8,r])}else s=z.from([0]);return z.concat([r,s])},te=e=>{let{protocol:t,service:r,timestamp:s,pk1:i,pk2:n,nonce:a,sign1:o,sign2:c,metadata:l}=e;return z.concat([z.from([137]),Z("protocol",t),Z("service",r),ee("timestamp",s),Q("pk1",i),Q("pk2",n),Q("nonce",a),Q("sign1",o),Q("sign2",c),z.from([168]),z.from("metadata","ascii"),z.from([128])])},re=e=>{const t={...(0,s.D4)(e),...{state:G,error:""}};try{if(!t.pk2&&!t.sign1&&!t.sign2&&16===t.nonce?.length&&t.pk1?.length&&t.pk1.length>0)t.state=0;else if(!t.sign1&&32===t.nonce?.length&&t.pk1?.length&&t.pk2?.length&&t.sign2?.length&&t.pk1.length>0&&t.pk2.length>0&&t.sign2.length>0){const e=q.fromId(t.pk2),r=se(t,e.version);e.verifyChallenge(r,t.sign2,!0)?t.state=1:(X.log(t),t.state=G,t.error="STEP1 failed to verification of pk2")}else if(t.sign1?.length&&t.sign1.length>0&&32===t.nonce?.length&&t.pk1?.length&&t.pk2?.length&&t.sign2?.length&&t.pk1.length>0&&t.pk2.length>0&&t.sign2.length>0){const e=q.fromId(t.pk1),r=q.fromId(t.pk2);if(e.version!==r.version)t.state=G,t.error="pk1 and pk2 are using different serialization version, this is not allowed";else{const s=se(t,e.version);r.verifyChallenge(s,t.sign2,!0)?e.verifyChallenge(s,t.sign1,!0)?t.state=2:(t.state=G,t.error="challenge failed to verification of pk1"):(t.state=G,t.error="challenge failed to verification of pk2, looks like a tentative to tamper with an existing signature")}}}catch(r){t.state=G,t.error=r}return t},se=function(e,t){void 0===t&&(t=0);const{protocol:r,service:s,timestamp:n,pk1:a,pk2:o,nonce:c,metadata:l}=e,h={protocol:r,service:s,timestamp:n,pk1:a,pk2:o,nonce:c,metadata:l};return 0===t?(e=>{let{protocol:t,service:r,timestamp:s,pk1:i,pk2:n,nonce:a,metadata:o}=e;return z.concat([z.from([135]),Z("protocol",t),Z("service",r),ee("timestamp",s),Q("pk1",i),Q("pk2",n),Q("nonce",a),z.from([168]),z.from("metadata","ascii"),z.from([128])])})(h):z.from((0,i.l)(h))},ie=(e,t)=>{const r=Date.now();return r-e.timestamp<t&&e.timestamp<=r+1e4};class ne{constructor(e,t){void 0===t&&(t=6e4),this.state=-1,this.vaultysId=e,this.liveliness=t}static async verifyCertificate(e){return 2==re(e).state}static deserializeCertificate=re;static serializeCertificate_v0=te;static serializeCertificate=se;async setChallenge(e){if(-1!==this.state)throw new Error("Challenger already initialised, can't reset the state");if(this.challenge=re(e),!ie(this.challenge,this.liveliness))throw this.state=G,this.challenge.error="challenge timestamp failed the liveliness at first signature",new Error(this.challenge.error);if(this.challenge.state===G)throw this.state=G,X.error(this.challenge),new Error(this.challenge.error);if(0===this.challenge.state){this.mykey=this.vaultysId.id,this.challenge.pk2=this.mykey,this.hisKey=this.challenge.pk1,this.challenge.nonce=z.concat([this.challenge.nonce||new Uint8Array,(0,n.po)(16)]);const e=this.getUnsignedChallenge();if(!e)throw new Error("Error processing Challenge");this.challenge.sign2=await this.vaultysId.signChallenge(e)||void 0,this.challenge.state=this.state=1}else{if(2!==this.challenge.state)throw new Error("Challenge is from a protocol already launched, this is completely unsafe");if(this.mykey=this.vaultysId.id,!this.challenge.pk1?.equals(this.mykey)&&!this.challenge.pk1?.equals(this.mykey))throw this.state=G,new Error("Can't link the vaultys id to this challenge");this.state=2}}getContext(){return{protocol:this.challenge?.protocol,service:this.challenge?.service,metadata:this.challenge?.metadata}}createChallenge(e,t,r,s){if(void 0===r&&(r=1),void 0===s&&(s={}),-1!=this.state)throw this.state=G,new Error("Challenger already initialised, can't reset the state");this.mykey=this.vaultysId.toVersion(r).id,this.challenge={protocol:e,service:t,metadata:s,timestamp:Date.now(),pk1:this.mykey,nonce:(0,n.po)(16),state:0},this.state=0}getCertificate(){return this.challenge?z.from((e=>{if(0==e.state){const{protocol:t,service:r,timestamp:s,pk1:n,nonce:a,metadata:o}=e,c={protocol:t,service:r,timestamp:s,pk1:n,nonce:a,metadata:o},l=(0,i.l)(c);return z.from(l)}if(1==e.state){const{protocol:t,service:r,timestamp:s,pk1:n,pk2:a,nonce:o,sign2:c,metadata:l}=e,h={protocol:t,service:r,timestamp:s,pk1:n,pk2:a,nonce:o,sign2:c,metadata:l},u=(0,i.l)(h);return z.from(u)}if(2==e.state){const{protocol:t,service:r,timestamp:s,pk1:n,pk2:a,nonce:o,sign1:c,sign2:l,metadata:h}=e,u={protocol:t,service:r,timestamp:s,pk1:n,pk2:a,nonce:o,sign1:c,sign2:l,metadata:h},f=(0,i.l)(u);return z.from(f)}return null})(this.challenge)||[]):z.from([])}getUnsignedChallenge(){return se(this.challenge,this.vaultysId.version)}getContactDid(){return this.hisKey?q.fromId(this.hisKey).did:null}getContactId(){if(this.isComplete()){return q.fromId(this.hisKey,this.getCertificate()||void 0)}throw new Error("The challenge is not COMPLETE, it is unsafe to get the Contact ID before")}static fromString(e,t){const r=new ne(e);return r.setChallenge(t),r}hasFailed(){return this.state==G}isComplete(){return 2==this.state}isSelfAuth(){return this.mykey?.toString("hex")==this.hisKey?.toString("hex")}async update(e,t){if(void 0===t&&(t={}),-1===this.state)await this.setChallenge(e);else if(0===this.state){const t=re(e);if(!t)throw this.state=G,new Error("Can't read the new incoming challenge");if(!t.nonce?.subarray(0,16).equals(this.challenge.nonce.subarray(0,16)))throw this.state=G,new Error("Nonce has been tampered with");if(t.timestamp!==this.challenge?.timestamp)throw this.state=G,new Error("Timestamp has been tampered with");if(!ie(t,this.liveliness))throw this.state=G,new Error("challenge timestamp failed the liveliness at 2nd signature");if(1!==t.state)throw this.state=G,new Error(`The challenge is in an expected state. Received state = '${t.state}', expected state = '1'`);{if(this.state=1,!this.mykey||!t.pk1||!this.mykey.equals(t.pk1))throw new Error(`The challenge has been tampered with. Received pk1 = '${t.pk1}', expected pk1 = '${this.mykey}'`);this.hisKey=t.pk2;const e=se(t,this.vaultysId.version);if(!e)throw new Error("Error processing Challenge");t.sign1=await this.vaultysId.signChallenge(e),this.challenge=t,this.state=this.challenge.state=2}}else{if(1!==this.state)throw this.state=G,new Error;{const t=re(e);if(!this.mykey.equals(t.pk2))throw this.state=G,new Error("The challenge pk2 has been tampered with");if(2!==t.state)throw this.state=G,new Error(`The challenge is in an expected state. Received state = '${t.state}', expected state = '2'`);this.challenge=t,this.state=2}}}}var ae=r(84686).Buffer;const oe=e=>e.startsWith("vaultys://login?")?"LOGIN":e.startsWith("vaultys://docsign?")?"DOCUMENT":"UNKNOWN";class ce{constructor(e,t){this.vaultysId=e,this.store=t,this.store.get("metadata")||this.store.set("metadata",{}),this.vaultysId.keyManager.entropy?this.store.set("entropy",this.vaultysId.keyManager.entropy):this.store.set("secret",this.vaultysId.getSecret()),this.store.save()}static async fromStore(e){const t=e.get("entropy"),r=e.get("secret");if(r){if(t){const s=ae.from(r,"base64")[0],i=await q.fromEntropy(t,s);return new ce(i,e)}{const t=q.fromSecret(r);return new ce(t,e)}}if(t){const r=await q.machineFromEntropy(t);return new ce(r,e)}{const t=await q.generateMachine();return new ce(t,e)}}merge(e,t){void 0===t&&(t=!0);const r=t?e:this.store,s=t?this.store:e;this.store.set("metadata",{...s.get("metadata"),...r.get("metadata")}),["signatures","wot"].forEach((t=>{let r=e.substore(t),s=this.store.substore(t);r.list().forEach((e=>{s.get(e)||s.set(e,r.get(e))}))}));let i=e.substore("contacts"),n=this.store.substore("contacts");const a=t?i:n,o=t?n:i;i.list().forEach((e=>{if(n.get(e)){const t=n.get(e);t.metadata={...o.get(e).metadata,...a.get(e).metadata},n.set(e,t)}else n.set(e,i.get(e))})),this.store.save()}isHardware(){return this.vaultysId.isHardware()}async signIn(){if(!this.vaultysId.isHardware())return!0;await window.CredentialUserInteractionRequest();const e=(0,n.po)(32),t=this.vaultysId.keyManager,r=await navigator.credentials.get({publicKey:{challenge:e,allowCredentials:[{type:"public-key",id:t.fid,transports:t.transports}],userVerification:"discouraged"}});if(null==r)return!1;const s=r.response,i=T.extractChallenge(ae.from(s.clientDataJSON));return e.toString("base64")===i&&t.verifyCredentials(r)}get contacts(){const e=this.store.substore("contacts");return e.list().map((t=>e.get(t))).map((e=>3===e.type?new q(L.instantiate(e.keyManager),e.certificate,e.type):new q(R.instantiate(e.keyManager),e.certificate,e.type)))}getContact(e){const t=this.store.substore("contacts").get(e);return t?3===t.type?new q(L.instantiate(t.keyManager),t.certificate,t.type):new q(R.instantiate(t.keyManager),t.certificate,t.type):null}setContactMetadata(e,t,r){const s=this.store.substore("contacts").get(e);s&&(s.metadata||(s.metadata={}),s.metadata[t]=r)}getContactMetadata(e,t){const r=this.store.substore("contacts").get(e);return r&&r.metadata?r.metadata[t]:null}getContactMetadatas(e){const t=this.store.substore("contacts").get(e);return t&&t.metadata?t.metadata:null}async verifyRelationshipCertificate(e){const t=this.store.substore("contacts").get(e)||this.store.substore("registrations").get(e);return ne.verifyCertificate(t.certificate)}set name(e){this.store.get("metadata").name=e}get name(){return this.store.get("metadata").name}get displayName(){const e=this.store.get("metadata");return e.firstname?e.firstname+" "+(e.name??""):e.name??"Anonymous "+this.vaultysId.fingerprint?.slice(-4)}set phone(e){this.store.get("metadata").phone=e}get phone(){return this.store.get("metadata").phone}set email(e){this.store.get("metadata").email=e}get email(){return this.store.get("metadata").email}async signChallenge(e){const t=await this.vaultysId.signChallenge(e);return this.store.substore("signatures").set(""+Date.now(),{signature:t,challenge:e}),this.store.save(),t}async signFile(e){const t=ae.from(`vaultys://docsign?hash=${e.toString("hex")}&timestamp=${Date.now()}`,"utf-8"),r={challenge:t,signature:await this.vaultysId.signChallenge(t)};return this.store.substore("signatures").set(Date.now()+"",r),this.store.save(),r}async verifyFile(e,t,r){void 0===r&&(r=!0);const s=e.toString("utf8");if(!s.startsWith("vaultys://docsign?"))return!1;const i=new URL(s);return!(2!==i.search.match(/[a-z\d]+=[a-z\d]+/gi)?.length||!i.searchParams.get("hash")||!i.searchParams.get("timestamp"))&&await this.vaultysId.verifyChallenge(e,t,r)}getSignatures(){const e=this.store.substore("signatures");return e.list().sort().map((t=>{const r=e.get(t),s=ae.from(r.challenge).toString("utf-8");return{date:t,payload:r,challenge:s,type:oe(s)}}))}migrate(e){if(e!=this.vaultysId.version){this.vaultysId.toVersion(e);const t=this.store.substore("contacts");for(const r of t.list()){const s=this.getContact(r);if(s){const i=s?.toVersion(e);t.set(i.did,{...s,...i}),t.delete(r)}}}}async verifyChallenge(e,t){return this.vaultysId.verifyChallenge(e,t,!0)}async sync(e,t){if(void 0===t&&(t=!1),t){const r=await this.startSRP(e,"p2p","selfauth");if(r.isSelfAuth()&&r.isComplete()){const r=this.store.fromString((await e.receive()).toString("utf-8"));e.send(ae.from(this.store.toString(),"utf-8")),this.merge(r,!t)}}else{const r=await this.acceptSRP(e,"p2p","selfauth",!0);if(r.isSelfAuth()&&r.isComplete()){e.send(ae.from(this.store.toString(),"utf-8"));const r=this.store.fromString((await e.receive()).toString("utf-8"));this.merge(r,!t)}e.close()}this.store.save()}listCertificates(){const e=this.store.substore("wot");return e.list().map((t=>{const r=e.get(t);if(r.timestamp)return r;{const s={...ne.deserializeCertificate(e.get(t)),raw:r};return e.set(t,s),s}}))}async startSRP(e,t,r,s){void 0===s&&(s={});const i=new ne(this.vaultysId.toVersion(0));i.createChallenge(t,r,0,s);const n=i.getCertificate();if(!n)throw e.close(),e.send(ae.from([0])),new Error("Error processing challenge");e.send(n);try{const t=await e.receive();await i.update(t)}catch(a){throw e.send(ae.from([0])),new Error(a)}if(i.isComplete()){const t=i.getCertificate();if(!t)throw e.close(),e.send(ae.from([0])),new Error("Error processing challenge");return e.send(t),this.store.substore("wot").set(Date.now()+"",t),i}throw e.send(ae.from([0])),new Error("Can't add a new contact if the protocol is not complete")}async acceptSRP(e,t,r,s){void 0===s&&(s=!1);const i=new ne(this.vaultysId.toVersion(0));try{let t=await e.receive();await i.update(t)}catch(o){throw e.send(ae.from([0])),new Error(o)}const n=i.getContext();if(n.protocol!=t||n.service!=r)throw e.send(ae.from([0])),new Error(`The challenge was expecting protocol '${t}' and service '${r}', received '${n.protocol}' and '${n.service}'`);const a=i.getCertificate();if(!a)throw e.close(),e.send(ae.from([0])),new Error("Error processing challenge");e.send(a);try{let t=await e.receive();await i.update(t)}catch(o){throw e.close(),new Error(o)}if(i.isComplete()){const t=i.getCertificate();return s||e.close(),this.store.substore("wot").set(Date.now()+"",t),i}throw e.close(),new Error("Can't add a new contact if the protocol is not complete")}saveContact(e){e.toVersion(this.vaultysId.version),e.isMachine()?this.store.substore("registrations").set(e.did,{site:e.did,serverId:e?.id.toString("base64"),certificate:e.certificate}):this.store.substore("contacts").set(e.did,e),this.store.save()}async askContact(e,t){void 0===t&&(t={});const r=(await this.startSRP(e,"p2p","auth")).getContactId();return this.saveContact(r),r}async acceptContact(e,t){void 0===t&&(t={});const r=(await this.acceptSRP(e,"p2p","auth")).getContactId();return this.saveContact(r),r}async askMyself(e){const t=await this.startSRP(e,"p2p","selfauth");return t.isSelfAuth()&&t.isComplete()}async acceptMyself(e){const t=await this.acceptSRP(e,"p2p","selfauth");return t.isSelfAuth()&&t.isComplete()}}r(3459);var le=r(35795)},35795:(e,t,r)=>{"use strict";r.d(t,{DT:()=>l,XG:()=>c});var s=r(84686).Buffer;const i=(e,t)=>t?"certificate"===e?"__C__"+s.from(t).toString("base64"):"Buffer"===t.type?"_bx_"+s.from(t.data).toString("base64"):"Array"===t.constructor.name?"_bx_"+s.from(t).toString("base64"):t:t,n=(e,t)=>t&&"certificate"===e?"string"==typeof t&&t.startsWith("__C__")?s.from(t.slice(5),"base64"):s.from(t):"string"==typeof t&&t.startsWith("_bx_")?s.from(t.slice(4),"base64"):t,a=e=>JSON.stringify(e,i),o=e=>JSON.parse(e,n),c=e=>{let t={};return e||(e=()=>a(t)),h(t,e,(()=>""))},l=function(e){void 0===e&&(e="vaultysStorage");let t={};return localStorage[e]?t=o(localStorage[e]):localStorage[e]="{}",h(t,(()=>localStorage.setItem(e,a(t))),(()=>localStorage.removeItem(e)))},h=(e,t,r)=>({destroy:r,save:t,toString:()=>a(e),fromString:(e,t,r)=>h(o(e),t,r),_raw:e,set:(t,r)=>e[t]=r,delete:t=>delete e[t],get:t=>e[t],list:()=>Object.keys(e).filter((e=>!e.startsWith("!"))),listSubstores:()=>Object.keys(e).filter((e=>e.startsWith("!"))).map((e=>e.slice(1))),deleteSubstore:t=>delete e["!"+t],substore:s=>(e["!"+s]||(e["!"+s]={}),h(e["!"+s],t,r))})},75530:(e,t,r)=>{"use strict";r.d(t,{E0:()=>d,EY:()=>u,aD:()=>f,po:()=>l,tW:()=>h});var s=r(71899),i=r(35848),n=r.n(i),a=r(41408),o=r(76088),c=r(4150);const l=e=>a.Buffer.from(s.randomBytes?(0,s.randomBytes)(e):crypto.getRandomValues(new Uint8Array(e))),h=(e,t)=>a.Buffer.from((e=>{const t=e.replaceAll("-","").toLowerCase();return"sha256"===t?o.s.create():"sha512"===t?c.Zf.create():"sha224"===t?o.Z.create():o.s.create()})(e).update(t).digest()),u=n().secretbox,f=e=>a.Buffer.from(e,"hex"),d=e=>a.Buffer.from(e,"utf-8")},3459:(e,t,r)=>{"use strict";r.d(t,{Ay:()=>o,Yc:()=>a});var s=r(75530),i=r(84686).Buffer;const n=(e,t)=>{const r=t,n=(0,s.po)(s.EY.nonceLength),a=(0,s.EY)(Uint8Array.from(e),n,r),o=new Uint8Array(n.length+a.length);return o.set(n),o.set(a,n.length),i.from(o)},a=(e,t)=>{const r=t,n=e,a=n.slice(0,s.EY.nonceLength),o=n.slice(s.EY.nonceLength,e.length),c=s.EY.open(o,a,r);if(!c)throw new Error("Could not decrypt message");return i.from(c)},o={decrypt:a,encrypt:n,encryptChannel:(e,t)=>{const r={apply:(e,r,s)=>e.call(r,n(s[0],t))},s={async apply(e,r,s){const i=await e.call(r);return a(i,t)}};return e.send=new Proxy(e.send,r),e.receive=new Proxy(e.receive,s),e},generateKey:()=>(0,s.po)(32)}},24128:()=>{},4355:()=>{},71906:()=>{},68725:()=>{},49630:()=>{},9428:()=>{},26166:()=>{},34654:()=>{},34149:()=>{},89780:()=>{},99926:()=>{},90124:()=>{},71220:()=>{},38854:()=>{},92520:()=>{},37115:()=>{},60522:()=>{},70877:()=>{},87862:()=>{},77356:()=>{},22238:()=>{},71899:()=>{}}]);