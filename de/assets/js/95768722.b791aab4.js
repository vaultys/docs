"use strict";(self.webpackChunksmartlink_doc=self.webpackChunksmartlink_doc||[]).push([[7949],{10803:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var s=n(86070),t=n(62907);const r={sidebar_position:3},c="2 Web of Trust",o={id:"develop/protocol/specifications/wot",title:"2 Web of Trust",description:"We define Web of Trust as a Set of shared VaultysId. Each VaultysId owner has his own set of VaultysId to communicate with. The keys contained in the VaultysId can be used to sign or encrypt data. Each service can use its own protocol deriving keys from them.",source:"@site/docs/develop/protocol/specifications/wot.md",sourceDirName:"develop/protocol/specifications",slug:"/develop/protocol/specifications/wot",permalink:"/de/docs/develop/protocol/specifications/wot",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"userguideSidebar",previous:{title:"1 DID",permalink:"/de/docs/develop/protocol/specifications/did"},next:{title:"3 Addressing protocol",permalink:"/de/docs/develop/protocol/specifications/url"}},d={},a=[{value:"2.1 Symetric Relationship Protocol",id:"21-symetric-relationship-protocol",level:3},{value:"2.2 General description",id:"22-general-description",level:3},{value:"2.3 Initial Handchek",id:"23-initial-handchek",level:3},{value:"2.4 Authentication",id:"24-authentication",level:3},{value:"2.5 Reference implementation",id:"25-reference-implementation",level:3},{value:"2.6 Example",id:"26-example",level:3},{value:"Channel implementations",id:"channel-implementations",level:2}];function l(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"2-web-of-trust",children:"2 Web of Trust"})}),"\n",(0,s.jsx)(i.p,{children:"We define Web of Trust as a Set of shared VaultysId. Each VaultysId owner has his own set of VaultysId to communicate with. The keys contained in the VaultysId can be used to sign or encrypt data. Each service can use its own protocol deriving keys from them."}),"\n",(0,s.jsx)(i.p,{children:"However a protocol is defined for the trust setup, ie in order to integrate the set of reliable keys. The protocol is called Symetric Relationship Protocol (SRP) as it aims to create a certificate signed by both parties and ends-up to be the same on both side."}),"\n",(0,s.jsx)(i.h3,{id:"21-symetric-relationship-protocol",children:"2.1 Symetric Relationship Protocol"}),"\n",(0,s.jsx)(i.p,{children:"Between Bob and Alice each having a VaultysId.\nData being exchanged are:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"protocol"})," name (for instance ",(0,s.jsx)(i.code,{children:"p2p"}),")"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"service"})," name (for instance ",(0,s.jsx)(i.code,{children:"auth"}),")"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"timestamp"}),", used to prevent from replay attack"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"id1"})," and ",(0,s.jsx)(i.code,{children:"id2"}),"  are VaultysId of Bob and Alice Respectively."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Nonce"})," (random)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"sign1"})," and ",(0,s.jsx)(i.code,{children:"sign2"})," are signatures created by  the signing key of ",(0,s.jsx)(i.code,{children:"Id1"})," and ",(0,s.jsx)(i.code,{children:"Id2"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"metadata1"}),"  and ",(0,s.jsx)(i.code,{children:"metadata2"}),"  are JSON objects that can be empty\nWe can sumup the protocole using the schema:\n",(0,s.jsx)(i.code,{children:"message = { protocole, service, timestamp, id1, id2, nonce1, nonce2, metadata1, metadata2 }"}),"\n",(0,s.jsx)(i.code,{children:"sign1"})," and ",(0,s.jsx)(i.code,{children:"sign2"})," are signatures using signing keys of ",(0,s.jsx)(i.code,{children:"id1"})," and ",(0,s.jsx)(i.code,{children:"id2"})," of ",(0,s.jsx)(i.code,{children:"sha256(messagepack(message))"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Metadata is user defined by ",(0,s.jsx)(i.code,{children:"protocol"})," and ",(0,s.jsx)(i.code,{children:"service"}),". For instance we can use metadata to exchange name, email and phone between parties so they are certified inside each other Web of Trust."]}),"\n",(0,s.jsx)(i.p,{children:"We define:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["M1 = ",(0,s.jsx)(i.code,{children:"protocol, service, timestamp, id1, nonce1, metadata1"})]}),"\n",(0,s.jsxs)(i.li,{children:["M2 = ",(0,s.jsx)(i.code,{children:"id2, nonce2, metadata2"})]}),"\n",(0,s.jsxs)(i.li,{children:["sign1 and sign2 are signatures of ",(0,s.jsx)(i.code,{children:"sha256(M1 | M2)"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"certificate"})," = ",(0,s.jsx)(i.code,{children:"sha256(M1 | M2) | sign1 | sign2"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"certificateId"})," = ",(0,s.jsx)(i.code,{children:"sha256(certificate)"})]}),"\n",(0,s.jsx)(i.li,{children:"Messages are serialized using MessagePack"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The Protocol needs to rely on the following infrastructure"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["A bidirectionnal communication ",(0,s.jsx)(i.code,{children:"channel"})," already known to Bob and Alice. Active attack is allowed except for initial ",(0,s.jsx)(i.em,{children:"handcheck"})," (see later)"]}),"\n",(0,s.jsxs)(i.li,{children:["A ",(0,s.jsx)(i.code,{children:"storage"})," able to save Id and certificate. The security model for ",(0,s.jsx)(i.code,{children:"storage"})," is passive attack (ie be able to read the data, not tamper with)."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"22-general-description",children:"2.2 General description"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Bob -> Alice : send M1"}),"\n",(0,s.jsxs)(i.li,{children:["Alice verify this is the intent in ",(0,s.jsx)(i.code,{children:"protocol, service, metadata1"})," she wants to use and data is coherent."]}),"\n",(0,s.jsxs)(i.li,{children:["Alice verify that timestamp is within reasonable time (define by the ",(0,s.jsx)(i.code,{children:"protocol"}),")"]}),"\n",(0,s.jsx)(i.li,{children:"Alice -> Bob: send M1 + M2 + sign2"}),"\n",(0,s.jsxs)(i.li,{children:["Bob verify ",(0,s.jsx)(i.code,{children:"metadata2, sign2"})," are coherent"]}),"\n",(0,s.jsxs)(i.li,{children:["Bob -> Alice: ",(0,s.jsx)(i.code,{children:"sign1"})]}),"\n",(0,s.jsxs)(i.li,{children:["Alice verify that ",(0,s.jsx)(i.code,{children:"sign1"})," is valid"]}),"\n",(0,s.jsxs)(i.li,{children:["Alice -> Bob: ",(0,s.jsx)(i.code,{children:"COMPLETE"})," in order to ack the end of communication"]}),"\n",(0,s.jsxs)(i.li,{children:["Alice and Bob save the Ids together with the ",(0,s.jsx)(i.code,{children:"certificate"})," which is the same for Alice and Bob"]}),"\n"]}),"\n",(0,s.jsx)(i.mermaid,{value:"sequenceDiagram\n\tBob ->> Alice: M1\n\tAlice->>Alice: verify intent\n\tAlice->>Alice: verify timestamp deviation\n\tAlice->>Alice: ask user validation\n\tAlice->>Bob: M1 | M2 | sign2\n\tBob->>Bob: verify sign2\n\tBob->>Bob: ask validation\n\tBob->>Alice: M1 | M2 | sign1 | sign2\n\tAlice->>Alice: verify sign1\n\tAlice->>Bob: COMPLETE"}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsxs)(i.p,{children:["\xa0In a future version of the protocol, ",(0,s.jsx)(i.code,{children:"COMPLETE"})," might be replaced by the ",(0,s.jsx)(i.code,{children:"certificateId"})," when it will be defined."]})}),"\n",(0,s.jsx)(i.h3,{id:"23-initial-handchek",children:"2.3 Initial Handchek"}),"\n",(0,s.jsx)(i.p,{children:"The initial Handcheck is a way to exchange unknown keys between parties. The active attack where a attacker can change data during the protocol is out of the scope of the security model. The mandatory setup for security:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"face to face protocol realisation."}),"\n",(0,s.jsxs)(i.li,{children:["secure p2p channel:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"with a temporary random key exchanged (via QRCode for instance) that is used to encrypt the data exchanged in the protocol"}),"\n",(0,s.jsx)(i.li,{children:"No forward secrecy is needed"}),"\n",(0,s.jsx)(i.li,{children:"The key is destroyed afterwards. The protocol is resistant to later recovery or passive attack.\nThe constant are defined:"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"protocol"})," = ",(0,s.jsx)(i.code,{children:"p2p"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"service"})," = ",(0,s.jsx)(i.code,{children:"auth"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"timestamp"})," deviation is 10s"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"metadata1"})," and ",(0,s.jsx)(i.code,{children:"metadata2"})," are empty."]}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsxs)(i.p,{children:["In case of not face to face handcheck timestamp can be relaxed to a few hours (typically 2 hours), but it is reminded the security model assert that the communication channel to transmit information or endpoint (email, chat, SMS) is ",(0,s.jsx)(i.strong,{children:"NOT"})," compromised during the handcheck."]})}),"\n",(0,s.jsx)(i.h3,{id:"24-authentication",children:"2.4 Authentication"}),"\n",(0,s.jsxs)(i.p,{children:["Once HandCheck protocole has been completed, it is possible anytime after, to authenticate each other. For instance we replace classic login system based on ",(0,s.jsx)(i.code,{children:"username/password/mfa"})," by this single authentication scheme:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"protocol"})," = ",(0,s.jsx)(i.code,{children:"p2p"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"service"})," = ",(0,s.jsx)(i.code,{children:"auth"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"timestamp"})," deviation is 10s"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"metadata1"})," and ",(0,s.jsx)(i.code,{children:"metadata2"})," are empty."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The verification on both parties ",(0,s.jsx)(i.code,{children:"Alice"})," and ",(0,s.jsx)(i.code,{children:"Bob"})," have an extra step, checking the validity of the handcheck registration certificate on both sides:"]}),"\n",(0,s.jsx)(i.mermaid,{value:"sequenceDiagram\n\tBob ->> Server: M1\n\tServer->>Server: verify intent\n\tServer->>Server: verify certificate for Bob id1\n\tServer->>Server: verify timestamp deviation\n\tServer->>Bob: M1 | M2 | sign2\n\tBob->>Bob: verify sign2\n\tBob->>Bob: verify certificate for Server Id2\n\tBob->>Bob: ask validation\n\tBob->>Server: M1 | M2 | sign1 | sign2\n\tServer->>Server: verify sign1\n\tServer->>Bob: COMPLETE"}),"\n",(0,s.jsx)(i.h3,{id:"25-reference-implementation",children:"2.5 Reference implementation"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["MessagePack Serialisation is handled by ",(0,s.jsx)(i.a,{href:"https://github.com/ygoe/msgpack.js/tree/v1.0.3",children:"https://github.com/ygoe/msgpack.js/tree/v1.0.3"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["Cryptography used for Ed25519 is handled by ",(0,s.jsx)(i.a,{href:"https://github.com/StricaHQ/bip32ed25519/tree/v1.0.4",children:"https://github.com/StricaHQ/bip32ed25519/tree/v1.0.4"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["COSE deserialisation for FIDO2 bridge implementation is handled by ",(0,s.jsx)(i.a,{href:"https://github.com/hildjj/node-cbor/tree/v8.0.1",children:"https://github.com/hildjj/node-cbor/tree/v8.0.1"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["X509 certificate deserialisation for FIDO2 bridge implementation is handled by ",(0,s.jsx)(i.a,{href:"https://github.com/PeculiarVentures/x509/tree/v1.9.2",children:"https://github.com/PeculiarVentures/x509/tree/v1.9.2"})]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["Random and sha256 primitives are the one provided by Nodejs ",(0,s.jsx)(i.a,{href:"https://nodejs.org/api/crypto.html",children:"https://nodejs.org/api/crypto.html"}),":"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"createHash"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"randomBytes"})}),"\n",(0,s.jsxs)(i.li,{children:["for browser delegated to ",(0,s.jsx)(i.a,{href:"https://github.com/browserify/crypto-browserify/tree/v3.12.0",children:"https://github.com/browserify/crypto-browserify/tree/v3.12.0"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://github.com/browserify/randombytes",children:"https://github.com/browserify/randombytes"})," (using getRandomValues browser primitive)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://github.com/browserify/createhash",children:"https://github.com/browserify/createhash"})," (using ",(0,s.jsx)(i.a,{href:"https://github.com/browserify/sha.js",children:"https://github.com/browserify/sha.js"})," behind the curtain)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"26-example",children:"2.6 Example"}),"\n",(0,s.jsx)(i.h2,{id:"channel-implementations",children:"Channel implementations"}),"\n",(0,s.jsx)(i.p,{children:"Channels are abstract object to exchange data in bidirectionnal way. In essence 2 methods are needed:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"send(data): void"})," to send data in fire and forget"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"async receive(): data"})," to wait for data reception"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"We provide 2 implementations:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"P2P channel"})," using webrtc (via the library peer.js)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Server/Browser channel"}),"  relying on","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["native ",(0,s.jsx)(i.code,{children:"fetch()"})," for the browser"]}),"\n",(0,s.jsx)(i.li,{children:"expressjs or nextjs middleware for the server."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["There is for testing a ",(0,s.jsx)(i.code,{children:"Channel Mock"})," (using RAM in the same process)\nWe are working on several other implementation like Patr"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},62907:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var s=n(30758);const t={},r=s.createContext(t);function c(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);